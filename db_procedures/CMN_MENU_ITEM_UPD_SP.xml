<?xml version="1.0" encoding="UTF-8" standalone="no"?><QueryResult xmlns="http://www.niku.com/xog/Query" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <Code>capture3c.get_db_procedure</Code>
      <Records>
        <Record>
          <code>CMN_MENU_ITEM_UPD_SP</code>
          <parallel>NO</parallel>
          <definition>
  CREATE OR REPLACE EDITIONABLE PROCEDURE "PPM"."CMN_MENU_ITEM_UPD_SP" (
   P_ACTION_CODE  		IN   VARCHAR2,
   P_CONTAINER_CODE		IN	 VARCHAR2,
   P_MENU_TYPE			IN	 VARCHAR2 DEFAULT 'MENU',
   P_PARENT_MENU_CODE	IN	 VARCHAR2 DEFAULT NULL,
   P_MENU_ITEM_LEVEL	IN	 NUMBER DEFAULT 0,
   P_MENU_ITEM_POSITION	IN	 NUMBER DEFAULT NULL,
   P_IS_REQUIRED		IN 	 NUMBER	DEFAULT 1,
   P_IS_DEFAULT			IN	 NUMBER DEFAULT 1,
   P_IS_HIDDEN			IN	 NUMBER DEFAULT 0,
   P_CREATED_BY       	IN   NUMBER DEFAULT 1
)
IS
   V_ACTION_COUNT       	 NUMBER;
   V_ACTION_ID          	 NUMBER;
   V_CONTAINER_COUNT		 NUMBER;
   V_CONTAINER_ID			 NUMBER;
   V_MENU_ITEM_ID			 NUMBER;
   V_PARENT_MENU_COUNT		 NUMBER;
   V_PARENT_MENU_ID			 NUMBER := NULL;
   V_MENU_ITEM_POSITION 	 NUMBER := P_MENU_ITEM_POSITION;
   V_CREATED_DATE			 DATE := SYSDATE;
BEGIN

	-- CHECK IF ACTION EXISTS FIRST

	SELECT	 COUNT (*)
	INTO     V_ACTION_COUNT
	FROM     CMN_ACTIONS
	WHERE    ACTION_CODE = P_ACTION_CODE;

   	IF V_ACTION_COUNT = 0 THEN
      RAISE_APPLICATION_ERROR (-20006, 'ACTION DOES NOT EXIST');
   	END IF;

	-- GET ACTION ID
	BEGIN
		 SELECT  ID
		 INTO    V_ACTION_ID
		 FROM    CMN_ACTIONS
		 WHERE   ACTION_CODE = P_ACTION_CODE;
		 EXCEPTION
			WHEN OTHERS THEN
				NULL;
   	END;

	-- CHECK FOR VALID CONTAINER/MENU TYPE

	IF ( ( P_MENU_TYPE != 'MENU' ) and ( P_MENU_TYPE != 'PANE' ) ) THEN
      RAISE_APPLICATION_ERROR (-20000, 'INVALID CONTAINER/MENU TYPE');
   	END IF;

	-- CHECK IF CONTAINER PAGE EXISTS
	-- AND SAVE A REFERENCE TO THIS PAGE ID
	IF (P_MENU_TYPE = 'PANE') THEN

		SELECT COUNT(*)
		INTO   V_CONTAINER_COUNT
		FROM   CMN_PAGES
		WHERE  PAGE_CODE = P_CONTAINER_CODE;

		IF ( V_CONTAINER_COUNT = 0 ) THEN
		   RAISE_APPLICATION_ERROR(-20006, 'PAGE PANE CONTAINER DOES NOT EXIST');
		END IF;

		-- GET CONTAINER PAGE ID
		BEGIN
			 SELECT  ID
		 	 INTO    V_CONTAINER_ID
		 	 FROM    CMN_PAGES
		 	 WHERE   PAGE_CODE = P_CONTAINER_CODE;
		 	 EXCEPTION
			 	WHEN OTHERS THEN
					 NULL;
   		END;

	END IF;


	-- CHECK IF MENU PORTLET CONTAINER EXISTS
	-- AND SAVE A REFERENCE TO THIS PORTLET ID
	IF (P_MENU_TYPE = 'MENU') THEN

		SELECT COUNT(*)
		INTO   V_CONTAINER_COUNT
		FROM   CMN_PORTLETS
		WHERE  PORTLET_CODE = P_CONTAINER_CODE;

		IF ( V_CONTAINER_COUNT = 0 ) THEN
		   RAISE_APPLICATION_ERROR(-20006, 'MENU PORTLET CONTAINER DOES NOT EXIST');
		END IF;

		-- GET CONTAINER MENU PORTLET ID
		BEGIN
			 SELECT  ID
		 	 INTO    V_CONTAINER_ID
		 	 FROM    CMN_PORTLETS
		 	 WHERE   PORTLET_CODE = P_CONTAINER_CODE;
		 	 EXCEPTION
			 	WHEN OTHERS THEN
					 NULL;
   		END;

	END IF;

   -- CHECK IF MENU EXISTS FIRST

   SELECT COUNT(*)
   INTO V_ACTION_COUNT
   FROM CMN_ACTIONS, CMN_MENU_ITEMS
   WHERE CMN_ACTIONS.ID = V_ACTION_ID
   AND	 CMN_MENU_ITEMS.ACTION_ID = CMN_ACTIONS.ID
   AND	 CMN_MENU_ITEMS.CONTAINER_ID = V_CONTAINER_ID;

   IF ( V_ACTION_COUNT = 0 ) THEN
   	  RAISE_APPLICATION_ERROR(-20006, 'MENU ITEM DOES NOT EXIST');
   END IF;


	-- CHECK IF PARENT MENU EXISTS
	-- AND GET A PAREMT MENU ID
	IF NOT( P_PARENT_MENU_CODE IS NULL ) THEN

	   -- CHECK IF PARENT MENU ITEM AND ACTION EXISTS

	   SELECT COUNT(*)
	   INTO V_PARENT_MENU_COUNT
	   FROM CMN_ACTIONS, CMN_MENU_ITEMS
	   WHERE CMN_ACTIONS.ACTION_CODE = P_PARENT_MENU_CODE
	   AND	 CMN_MENU_ITEMS.ACTION_ID = CMN_ACTIONS.ID;

	   IF ( V_PARENT_MENU_COUNT = 0 ) THEN
	   	  RAISE_APPLICATION_ERROR(-20006, 'PARENT MENU/ACTION DOES NOT EXIST');
	   END IF;

	   -- GET PARENT MENU ID
	   SELECT CMN_MENU_ITEMS.ID
	   INTO V_PARENT_MENU_ID
	   FROM CMN_ACTIONS, CMN_MENU_ITEMS
	   WHERE CMN_ACTIONS.ACTION_CODE = P_PARENT_MENU_CODE
	   AND	 CMN_MENU_ITEMS.ACTION_ID = CMN_ACTIONS.ID;

	END IF;


	-- GET MENU ITEM ID FOR UPDATE

	BEGIN
		SELECT   CMN_MENU_ITEMS.ID
		INTO     V_MENU_ITEM_ID
		FROM     CMN_ACTIONS, CMN_MENU_ITEMS
		WHERE	 CMN_ACTIONS.ACTION_CODE = P_ACTION_CODE
		AND		 CMN_MENU_ITEMS.ACTION_ID = CMN_ACTIONS.ID;
		EXCEPTION
			WHEN OTHERS THEN
				NULL;
	END;

	-- GET OLD MENU ITEM POSITION

	IF ( P_MENU_ITEM_POSITION IS NULL ) THEN

	   BEGIN
	   		SELECT POSITION
			INTO   V_MENU_ITEM_POSITION
			FROM   CMN_MENU_ITEMS
			WHERE  ID = V_MENU_ITEM_ID;
			EXCEPTION
				WHEN OTHERS THEN
					 V_MENU_ITEM_POSITION := 0;
	   	END;

	END IF;


	-- UPDATE MENU ITEM
	UPDATE CMN_MENU_ITEMS
	SET	   CONTAINER_ID = V_CONTAINER_ID,
		   CONTAINER_TYPE_CODE = P_MENU_TYPE,
		   ITEM_TYPE_CODE = P_MENU_TYPE,
		   PARENT_MENU_ID = V_PARENT_MENU_ID,
		   MENU_ITEM_LEVEL = P_MENU_ITEM_LEVEL,
		   POSITION = V_MENU_ITEM_POSITION,
		   IS_REQUIRED = P_IS_REQUIRED,
		   IS_DEFAULT = P_IS_DEFAULT,
		   IS_HIDDEN = P_IS_HIDDEN,
		   LAST_UPDATED_DATE = V_CREATED_DATE,
		   LAST_UPDATED_BY = P_CREATED_BY
	WHERE  ID = V_MENU_ITEM_ID;

	-- ??? SHOULD THIS BE FOR CMN_ACTIONS ???
	--- CMN_CAPTIONS_NLS_UPD_SP( 'CMN_MENU_ITEMS', V_MENU_ITEM_ID, P_NAME, P_DESCRIPTION, P_CREATED_BY );


END;
 
 
 
 
 </definition>
        </Record>
      </Records>
      <Slice>
        <Number>0</Number>
        <Size>1</Size>
        <Total>1</Total>
      </Slice>
    </QueryResult>