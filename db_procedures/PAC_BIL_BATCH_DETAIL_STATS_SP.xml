<?xml version="1.0" encoding="UTF-8" standalone="no"?><QueryResult xmlns="http://www.niku.com/xog/Query" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <Code>capture3c.get_db_procedure</Code>
      <Records>
        <Record>
          <code>PAC_BIL_BATCH_DETAIL_STATS_SP</code>
          <parallel>NO</parallel>
          <definition>
  CREATE OR REPLACE EDITIONABLE PROCEDURE "PPM"."PAC_BIL_BATCH_DETAIL_STATS_SP" 
(
  iBillRunKey   NUMBER,
  cCategory   VARCHAR2
)
AS
  StoO_selcnt INTEGER;
  StoO_error  INTEGER;
  StoO_rowcnt INTEGER;
  StoO_crowcnt  INTEGER := 0;
  StoO_fetchstatus  INTEGER := 0;
  StoO_errmsg GLOBALPKG.STRING;
  StoO_sqlstatus  INTEGER;
  cActionDesc   GLOBALPKG.STRING;
  iIntegrationID  NUMBER := 0;
  Type_   INTEGER;
BEGIN
 /* Called From:
     Procedure         :-
     Trigger           :-
     PMD TransactionId :-
     WMD ActionId      :-
   Modified By   : Devdatta
   Modified Date : 07/25/2001
*/
/*
	BEGIN
		StoO_rowcnt := 0;
		StoO_selcnt := 0;
		StoO_error  := 0;
		SELECT   integration_id
		INTO Pac_Bil_Batch_Detail_Stats_Sp.iIntegrationID FROM PROJECTACCOUNTING;
		StoO_rowcnt := SQL%ROWCOUNT;
		EXCEPTION
			WHEN TOO_MANY_ROWS THEN
				StoO_rowcnt := 2;
			WHEN NO_DATA_FOUND THEN
				StoO_rowcnt := 0;
				StoO_selcnt := 0;
			WHEN OTHERS THEN
				StoO_rowcnt := 0;
				StoO_selcnt := 0;
				StoO_error := SQLCODE;
				StoO_errmsg := SQLERRM;
	END;
*/
  Pac_Bil_Batch_Detail_Stats_Sp.cActionDesc :=  'Billing Matching';
	IF  Pac_Bil_Batch_Detail_Stats_Sp.cCategory = 'B' THEN
	BEGIN
		Pac_Bil_Batch_Detail_Stats_Sp.Type_ :=  2;
		BEGIN
		StoO_error   := 0;
		StoO_rowcnt  := 0;
		INSERT INTO TEMP_TEMPPAC_BIL_BATCH_STATS_S
		(TYPE_,
BINVCOUNT,
BTRANCOUNT,
BAMOUNT,
MINVCOUNT,
MTRANCOUNT,
MAMOUNT,
INVCOUNT,
INVAMOUNT,
GRPINVNUMBER,
COMPANY_CODE,
PROJECT_CODE,
TRANCOUNT,
AMOUNT)
		SELECT  Pac_Bil_Batch_Detail_Stats_Sp.Type_, 0, 0, 0, 0, 0, 0,
			   0, 0, InvoiceNo "Grouping Number", COMPANY_CODE, PROJECT_CODE, TranCount
			   "# Trans", Amount
			 FROM BB_BILLTRACKING
			WHERE BillingRunKey = Pac_Bil_Batch_Detail_Stats_Sp.iBillRunKey
			 AND ActionType = 'B' ;
		StoO_rowcnt := SQL%ROWCOUNT;
		EXCEPTION
			WHEN NO_DATA_FOUND THEN
				NULL;
			WHEN OTHERS THEN
				StoO_error := SQLCODE;
				StoO_errmsg := SQLERRM;
		END;
	END;
	END IF;
	IF  Pac_Bil_Batch_Detail_Stats_Sp.cCategory = 'M' THEN
	BEGIN
		Pac_Bil_Batch_Detail_Stats_Sp.Type_ :=  3;
		BEGIN
		StoO_error   := 0;
		StoO_rowcnt  := 0;
		INSERT INTO TEMP_TEMPPAC_BIL_BATCH_STATS_S
		(TYPE_,
BINVCOUNT,
BTRANCOUNT,
BAMOUNT,
MINVCOUNT,
MTRANCOUNT,
MAMOUNT,
INVCOUNT,
INVAMOUNT,
GRPINVNUMBER,
COMPANY_CODE,
PROJECT_CODE,
TRANCOUNT,
AMOUNT)
		SELECT  Pac_Bil_Batch_Detail_Stats_Sp.Type_, 0, 0, 0, 0, 0, 0,
			   0, 0, InvoiceNo "Grouping Number", COMPANY_CODE, PROJECT_CODE, TranCount
			   "# Trans", Amount
			 FROM BB_BILLTRACKING
			WHERE BillingRunKey = Pac_Bil_Batch_Detail_Stats_Sp.iBillRunKey
			 AND ActionType = 'M' ;
		StoO_rowcnt := SQL%ROWCOUNT;
		EXCEPTION
			WHEN NO_DATA_FOUND THEN
				NULL;
			WHEN OTHERS THEN
				StoO_error := SQLCODE;
				StoO_errmsg := SQLERRM;
		END;
	END;
	END IF;
	IF  Pac_Bil_Batch_Detail_Stats_Sp.cCategory = 'I' THEN
	BEGIN
		Pac_Bil_Batch_Detail_Stats_Sp.Type_ :=  4;
/* 10/25/99 PTR # 12978 Acuity or Great Plains */
/*
    IF  Pac_Bil_Batch_Detail_Stats_Sp.iIntegrationID  IN(4, 8) THEN
      BEGIN
			StoO_error   := 0;
			StoO_rowcnt  := 0;
			INSERT INTO TEMP_TEMPPAC_BIL_BATCH_STATS_S
					(TYPE_,
BINVCOUNT,
BTRANCOUNT,
BAMOUNT,
MINVCOUNT,
MTRANCOUNT,
MAMOUNT,
INVCOUNT,
INVAMOUNT,
GRPINVNUMBER,
COMPANY_CODE,
PROJECT_CODE,
TRANCOUNT,
AMOUNT)
			SELECT  Pac_Bil_Batch_Detail_Stats_Sp.Type_, 0, 0, 0, 0, 0, 0,
				   0, 0, L.InvoiceNo "Invoice No", C.COMPANY_NAME "COMPANY_CODE", '', 0, IV.invoiceamount
				   + NVL(IV.admincharge, 0) + NVL(IV.taxamount, 0) "Invoice Amt"
				 FROM BB_HSINVOICELIST L, INVOICEHEADER I, CLNTSUPP C, INVOICEHEADER_VALUES IV
				WHERE L.BillingRunKey = Pac_Bil_Batch_Detail_Stats_Sp.iBillRunKey
				 AND I.invoiceno = L.InvoiceNo
				 AND I.INVOICENO = IV.INVOICENO
				 AND IV.CURRENCY_TYPE = 'BILLING'
				 AND C.COMPANY_CODE = I.COMPANY_CODE;
			StoO_rowcnt := SQL%ROWCOUNT;
			EXCEPTION
				WHEN NO_DATA_FOUND THEN
					NULL;
				WHEN OTHERS THEN
					StoO_error := SQLCODE;
					StoO_errmsg := SQLERRM;
			END;
		ELSE
			BEGIN
			StoO_error   := 0;
			StoO_rowcnt  := 0;
		     INSERT INTO TEMP_TEMPPAC_BIL_BATCH_STATS_S
					(TYPE_,
BINVCOUNT,
BTRANCOUNT,
BAMOUNT,
MINVCOUNT,
MTRANCOUNT,
MAMOUNT,
INVCOUNT,
INVAMOUNT,
GRPINVNUMBER,
COMPANY_CODE,
PROJECT_CODE,
TRANCOUNT,
AMOUNT)
			SELECT  Pac_Bil_Batch_Detail_Stats_Sp.Type_, 0, 0, 0, 0, 0, 0,
				   0, 0, L.InvoiceNo "Invoice No", C.COMPANY_NAME "COMPANY_CODE", '', 0, IV.invoiceamount
				   + NVL(IV.admincharge, 0) + NVL(IV.taxamount, 0) "Invoice Amt"
				 FROM BB_HSINVOICELIST L, INVOICEHEADER I, CLNTSUPP C, INVOICEHEADER_VALUES IV
				WHERE L.BillingRunKey = Pac_Bil_Batch_Detail_Stats_Sp.iBillRunKey
				 AND I.invoiceno = L.InvoiceNo
				 AND I.INVOICENO = IV.INVOICENO
				 AND IV.CURRENCY_TYPE = 'BILLING'
				 AND C.COMPANY_CODE = NVL(I.BILL_TO_COMPANY_CODE, I.COMPANY_CODE);
			StoO_rowcnt := SQL%ROWCOUNT;
			EXCEPTION
				WHEN NO_DATA_FOUND THEN
					NULL;
				WHEN OTHERS THEN
					StoO_error := SQLCODE;
					StoO_errmsg := SQLERRM;
			END;
		END IF;
*/
  END;
	END IF;
END Pac_Bil_Batch_Detail_Stats_Sp;
 
 
 
 
 </definition>
        </Record>
      </Records>
      <Slice>
        <Number>0</Number>
        <Size>1</Size>
        <Total>1</Total>
      </Slice>
    </QueryResult>