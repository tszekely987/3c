<?xml version="1.0" encoding="UTF-8" standalone="no"?><QueryResult xmlns="http://www.niku.com/xog/Query" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <Code>capture3c.get_db_procedure</Code>
      <Records>
        <Record>
          <code>PAC_BIL_GET_PREVIEW_SP</code>
          <parallel>NO</parallel>
          <definition>
  CREATE OR REPLACE EDITIONABLE PROCEDURE "PPM"."PAC_BIL_GET_PREVIEW_SP" (
cUserID 		  		VARCHAR2 ,
in_cBegEntity 	  		IN VARCHAR2 ,
in_cEndEntity 	  	 	IN VARCHAR2 ,
in_cBegLocation   	 	IN VARCHAR2 ,
in_cEndLocation   	 	IN VARCHAR2 ,
in_cBegDepartment 	 	IN VARCHAR2 ,
in_cEndDepartment 	 	IN VARCHAR2 ,
in_cBegClient 	  	 	IN VARCHAR2 ,
in_cEndClient 	  	 	IN VARCHAR2 ,
in_cBegProjClass  	 	IN VARCHAR2 ,
in_cEndProjClass  		IN VARCHAR2 ,
in_cBillCycle 	  		IN VARCHAR2 ,
in_cFinProjectType		IN VARCHAR2 ,
cBillDate 		  		DATE ,
bGenerateNegativeInvoices NUMBER,
cLanguageCode VARCHAR2 DEFAULT 'en',
RC1 					IN OUT Pac_Bil_Get_Preview_Sppkg.RCT1)
AS
cBegEntity 	   			GLOBALPKG.STRING;
cEndEntity 				GLOBALPKG.STRING;
cBegLocation 			GLOBALPKG.STRING;
cEndLocation 			GLOBALPKG.STRING;
cBegDepartment 			GLOBALPKG.STRING;
cEndDepartment 			GLOBALPKG.STRING;
cBegClient 				GLOBALPKG.STRING;
cEndClient 				GLOBALPKG.STRING;
cBegProjClass 			GLOBALPKG.STRING;
cEndProjClass 			GLOBALPKG.STRING;
cBillCycle 				GLOBALPKG.STRING;
cFinProjectType			GLOBALPKG.STRING;
StoO_selcnt				INTEGER;
StoO_error 				INTEGER;
StoO_rowcnt				INTEGER;
StoO_crowcnt			INTEGER := 0;
StoO_fetchstatus		INTEGER := 0;
StoO_errmsg				GLOBALPKG.STRING;
StoO_sqlstatus			INTEGER;
wipcount                INTEGER;
ProjectCodeForBillingProject GLOBALPKG.STRING;
EnforceContractAmount   GLOBALPKG.STRING;
TitleForBillingProject   GLOBALPKG.STRING;


UF1_rowid 				ROWID;
UF1_oval1 				TEMP_TEMPPAC_BIL_GET_PREVIEW_S.COMPANY_NAME%TYPE;
CURSOR UF1_cursor IS
	SELECT TEMP_TEMPPAC_BIL_GET_PREVIEW_S.ROWID, C.COMPANY_NAME
	FROM CLNTSUPP C, TEMP_TEMPPAC_BIL_GET_PREVIEW_S
	WHERE C.COMPANY_CODE = TEMP_TEMPPAC_BIL_GET_PREVIEW_S.COMPANY_CODE
	AND TEMP_TEMPPAC_BIL_GET_PREVIEW_S.LevelNo = 30
	FOR UPDATE OF TEMP_TEMPPAC_BIL_GET_PREVIEW_S.COMPANY_NAME;

UF2_rowid 	ROWID;
UF2_oval1 	TEMP_TEMPPAC_BIL_GET_PREVIEW_S.ProjDesc%TYPE;
CURSOR UF2_cursor IS
	SELECT TEMP_TEMPPAC_BIL_GET_PREVIEW_S.ROWID, INV.NAME
  FROM pac_mnt_projects P, 
       TEMP_TEMPPAC_BIL_GET_PREVIEW_S,
	   INV_INVESTMENTS INV
	WHERE P.ID = INV.ID
	AND P.COMPANY_CODE = TEMP_TEMPPAC_BIL_GET_PREVIEW_S.COMPANY_CODE
	AND P.PROJECT_CODE = TEMP_TEMPPAC_BIL_GET_PREVIEW_S.PROJECT_CODE
	AND TEMP_TEMPPAC_BIL_GET_PREVIEW_S.LevelNo = 30
	FOR UPDATE OF TEMP_TEMPPAC_BIL_GET_PREVIEW_S.ProjDesc;

UF4_rowid 	ROWID;
UF4_oval1 	TEMP_TEMPPAC_BIL_GET_PREVIEW_S.AmtRemaining%TYPE;
CURSOR UF4_cursor IS
  SELECT TEMP_TEMPPAC_BIL_GET_PREVIEW_S.ROWID, DECODE( GREATEST( CNTS.CONTRACTAMOUNT - NVL(P.amountbilled,0), CNTS.CONTRACTAMOUNT ), CNTS.CONTRACTAMOUNT - NVL(P.amountbilled,0),
		   										 		 CNTS.CONTRACTAMOUNT, CNTS.CONTRACTAMOUNT - NVL(P.amountbilled,0) )
  FROM pac_mnt_projects P, projcntrts cnts, TEMP_TEMPPAC_BIL_GET_PREVIEW_S
	WHERE P.COMPANY_CODE = TEMP_TEMPPAC_BIL_GET_PREVIEW_S.COMPANY_CODE
	AND P.PROJECT_CODE = TEMP_TEMPPAC_BIL_GET_PREVIEW_S.PROJECT_CODE
	AND TEMP_TEMPPAC_BIL_GET_PREVIEW_S.PROJECT_CODE = cnts.PROJECT_CODE
	AND TEMP_TEMPPAC_BIL_GET_PREVIEW_S.LevelNo = 20
	FOR UPDATE OF TEMP_TEMPPAC_BIL_GET_PREVIEW_S.AmtRemaining;

UF5_rowid 	ROWID;
UF5_oval1 	TEMP_TEMPPAC_BIL_GET_PREVIEW_S.ID%TYPE;
CURSOR UF5_cursor IS
	SELECT TEMP_TEMPPAC_BIL_GET_PREVIEW_S.ROWID, TEMP_TEMPPAC_BIL_GET_PREVIEW_S.ID
	FROM TEMP_TEMPPAC_BIL_GET_PREVIEW_S
	WHERE TEMP_TEMPPAC_BIL_GET_PREVIEW_S.LevelNo = 10
	FOR UPDATE OF TEMP_TEMPPAC_BIL_GET_PREVIEW_S.BILLING_PROJECT_CODE, TEMP_TEMPPAC_BIL_GET_PREVIEW_S.ENFORCE_CONTRACT_AMOUNT;

UF6_rowid 	ROWID;
UF6_oval1 	TEMP_TEMPPAC_BIL_GET_PREVIEW_S.ENFORCE_CONTRACT_AMOUNT%TYPE;
CURSOR UF6_cursor IS
	SELECT TEMP_TEMPPAC_BIL_GET_PREVIEW_S.ROWID, CNTS.ENFORCE_CONTRACT_AMOUNT
	FROM TEMP_TEMPPAC_BIL_GET_PREVIEW_S, projcntrts cnts
	WHERE TEMP_TEMPPAC_BIL_GET_PREVIEW_S.PROJECT_CODE = cnts.PROJECT_CODE
	FOR UPDATE OF TEMP_TEMPPAC_BIL_GET_PREVIEW_S.ENFORCE_CONTRACT_AMOUNT;

-- cursor used to filter the records that have no WIP transactions
UF3_rowid 	ROWID;
UF3_companycode TEMP_TEMPPAC_BIL_GET_PREVIEW_S.COMPANY_CODE%TYPE;
UF3_projectcode TEMP_TEMPPAC_BIL_GET_PREVIEW_S.PROJECT_CODE%TYPE;
UF3_amtremaining TEMP_TEMPPAC_BIL_GET_PREVIEW_S.AMTREMAINING%TYPE;
UF3_billamount TEMP_TEMPPAC_BIL_GET_PREVIEW_S.BILLAMOUNT%TYPE;
UF3_projtype TEMP_TEMPPAC_BIL_GET_PREVIEW_S.PROJTYPE%TYPE;

CURSOR UF3_cursor IS
	SELECT TEMP_TEMPPAC_BIL_GET_PREVIEW_S.ROWID, TEMP_TEMPPAC_BIL_GET_PREVIEW_S.COMPANY_CODE, TEMP_TEMPPAC_BIL_GET_PREVIEW_S.PROJECT_CODE,
	       TEMP_TEMPPAC_BIL_GET_PREVIEW_S.AMTREMAINING, TEMP_TEMPPAC_BIL_GET_PREVIEW_S.BILLAMOUNT, TEMP_TEMPPAC_BIL_GET_PREVIEW_S.PROJTYPE
	FROM TEMP_TEMPPAC_BIL_GET_PREVIEW_S
	WHERE TEMP_TEMPPAC_BIL_GET_PREVIEW_S.LevelNo = 10;

BEGIN
 /* Called From:
     Procedure         :-
     Trigger           :-
     PMD TransactionId :-
     WMD ActionId      :-
   Modified By   :Nitin
   Modified Date :07/25/01
*/
	Pac_Bil_Get_Preview_Sp.cBegEntity := Pac_Bil_Get_Preview_Sp.in_cBegEntity;
	Pac_Bil_Get_Preview_Sp.cEndEntity := Pac_Bil_Get_Preview_Sp.in_cEndEntity;
	Pac_Bil_Get_Preview_Sp.cBegLocation := Pac_Bil_Get_Preview_Sp.in_cBegLocation;
	Pac_Bil_Get_Preview_Sp.cEndLocation := Pac_Bil_Get_Preview_Sp.in_cEndLocation;
	Pac_Bil_Get_Preview_Sp.cBegDepartment := Pac_Bil_Get_Preview_Sp.in_cBegDepartment;
	Pac_Bil_Get_Preview_Sp.cEndDepartment := Pac_Bil_Get_Preview_Sp.in_cEndDepartment;
	Pac_Bil_Get_Preview_Sp.cBegClient := Pac_Bil_Get_Preview_Sp.in_cBegClient;
	Pac_Bil_Get_Preview_Sp.cEndClient := Pac_Bil_Get_Preview_Sp.in_cEndClient;
	Pac_Bil_Get_Preview_Sp.cBegProjClass := Pac_Bil_Get_Preview_Sp.in_cBegProjClass;
	Pac_Bil_Get_Preview_Sp.cEndProjClass := Pac_Bil_Get_Preview_Sp.in_cEndProjClass;
	Pac_Bil_Get_Preview_Sp.cBillCycle := Pac_Bil_Get_Preview_Sp.in_cBillCycle;
	Pac_Bil_Get_Preview_Sp.cFinProjectType := Pac_Bil_Get_Preview_Sp.in_cFinProjectType;
  
	BEGIN
	StoO_error   := 0;
	StoO_rowcnt  := 0;
    DELETE FROM PAC_BB_SELECTBILL_CONSINV
	WHERE UserID = Pac_Bil_Get_Preview_Sp.cUserID;
	DELETE FROM BB_SELECTIVEBILLING
	WHERE UserID = Pac_Bil_Get_Preview_Sp.cUserID;
	StoO_rowcnt := SQL%ROWCOUNT;
	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			NULL;
		WHEN OTHERS THEN
			StoO_error := SQLCODE;
			StoO_errmsg := SQLERRM;
	END;

	IF  Pac_Bil_Get_Preview_Sp.cEndEntity IS NULL THEN
		Pac_Bil_Get_Preview_Sp.cEndEntity :=  'zzzzzzzzzz';
	END IF;
	IF  Pac_Bil_Get_Preview_Sp.cEndLocation IS NULL THEN
		Pac_Bil_Get_Preview_Sp.cEndLocation :=  'zzzzzzzzzz';
	END IF;
	IF  Pac_Bil_Get_Preview_Sp.cEndDepartment IS NULL THEN
		Pac_Bil_Get_Preview_Sp.cEndDepartment :=  'zzzzzzzzzz';
	END IF;
	IF  Pac_Bil_Get_Preview_Sp.cEndClient IS NULL THEN
		Pac_Bil_Get_Preview_Sp.cEndClient :=  'zzzzzzzzzz';
	END IF;
	IF  Pac_Bil_Get_Preview_Sp.cEndProjClass IS NULL THEN
		Pac_Bil_Get_Preview_Sp.cEndProjClass :=  'zzzzzzzzzz';
	END IF;
	IF  Pac_Bil_Get_Preview_Sp.cBegEntity IS NULL THEN
		Pac_Bil_Get_Preview_Sp.cBegEntity :=  ' ';
	END IF;
	IF  Pac_Bil_Get_Preview_Sp.cBegLocation IS NULL THEN
		Pac_Bil_Get_Preview_Sp.cBegLocation :=  ' ';
	END IF;
	IF  Pac_Bil_Get_Preview_Sp.cBegDepartment IS NULL THEN
		Pac_Bil_Get_Preview_Sp.cBegDepartment :=  ' ';
	END IF;
	IF  Pac_Bil_Get_Preview_Sp.cBegClient IS NULL THEN
		Pac_Bil_Get_Preview_Sp.cBegClient :=  ' ';
	END IF;
	IF  Pac_Bil_Get_Preview_Sp.cBegProjClass IS NULL THEN
		Pac_Bil_Get_Preview_Sp.cBegProjClass :=  ' ';
	END IF;
	IF  UPPER(Pac_Bil_Get_Preview_Sp.cBillCycle) = '&lt;ALL&gt;'
	OR  Pac_Bil_Get_Preview_Sp.cBillCycle IS NULL
	THEN
		Pac_Bil_Get_Preview_Sp.cBillCycle :=  NULL;
	END IF;
	IF  UPPER(Pac_Bil_Get_Preview_Sp.cFinProjectType) = '&lt;ALL&gt;'
	OR  Pac_Bil_Get_Preview_Sp.cFinProjectType IS NULL
	THEN
		Pac_Bil_Get_Preview_Sp.cFinProjectType :=  'SPR';
	END IF;
	DELETE FROM TEMP_CYCLESPAC_BIL_GET_PREVIEW;
	BEGIN
	StoO_error   := 0;
	StoO_rowcnt  := 0;
	INSERT INTO TEMP_CYCLESPAC_BIL_GET_PREVIEW (CYCLE)
		   SELECT  batchcycle
		   FROM BATCHBILLACCESS
		   WHERE batchcycle = NVL(Pac_Bil_Get_Preview_Sp.cBillCycle, batchcycle)
		   AND RESOURCE_CODE = Pac_Bil_Get_Preview_Sp.cUserID;
	StoO_rowcnt := SQL%ROWCOUNT;
	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			NULL;
		WHEN OTHERS THEN
			StoO_error := SQLCODE;
			StoO_errmsg := SQLERRM;
	END;
	DELETE FROM TEMP_TEMPPAC_BIL_GET_PREVIEW_S;

	BEGIN
		StoO_error   := 0;
		StoO_rowcnt  := 0;

		INSERT  INTO TEMP_TEMPPAC_BIL_GET_PREVIEW_S (COMPANY_CODE, PROJECT_CODE, ProjType, AmtRemaining, BillAmount, LevelNo, BILLING_CURRENCY_CODE, ID )
			   SELECT   W.COMPANY_CODE, W.PROJECT_CODE, P.type_, 0, SUM(WV.AmountRemaining), 1, P.BILLING_CURRENCY_CODE, P.ID
         FROM PPA_WIP W, pac_mnt_projects P, LOCATIONS L, TEMP_CYCLESPAC_BIL_GET_PREVIEW C ,PPA_WIP_VALUES WV
			   WHERE WV.AmountRemaining != 0
			   AND W.TransDate &lt;= TRUNC(Pac_Bil_Get_Preview_Sp.cBillDate)
			   AND W.Status = 0
			   AND W.COMPANY_CODE  BETWEEN Pac_Bil_Get_Preview_Sp.cBegClient AND Pac_Bil_Get_Preview_Sp.cEndClient
			   AND P.COMPANY_CODE = W.COMPANY_CODE
			   AND P.PROJECT_CODE = W.PROJECT_CODE
			   AND P.APPROVED = 1
			   AND P.STATUS IN ( 'O','H' )
			   AND INSTR( Pac_Bil_Get_Preview_Sp.cFinProjectType, RTRIM(P.type_)) &gt; 0
			   AND P.locationid  BETWEEN Pac_Bil_Get_Preview_Sp.cBegLocation AND Pac_Bil_Get_Preview_Sp.cEndLocation
			   AND P.departcode  BETWEEN Pac_Bil_Get_Preview_Sp.cBegDepartment AND Pac_Bil_Get_Preview_Sp.cEndDepartment
			   AND P.class  BETWEEN Pac_Bil_Get_Preview_Sp.cBegProjClass AND Pac_Bil_Get_Preview_Sp.cEndProjClass
			   AND C.CYCLE = P.billcycle
			   AND L.locationid = P.locationid
			   AND L.ENTITY  BETWEEN Pac_Bil_Get_Preview_Sp.cBegEntity AND Pac_Bil_Get_Preview_Sp.cEndEntity
			   AND W.TRANSNO = WV.TRANSNO
			   AND WV.CURRENCY_TYPE = 'BILLING'
			   AND  (   EXISTS (
					    SELECT object_id
						  FROM cmn_sec_chk_user_r_v0
						 WHERE object_id = 51560
						   AND user_id = (select user_id from srm_resources where unique_name = cUserID)
						   AND permission_code = 'READ')
				      OR EXISTS (
					    SELECT object_id
					      FROM cmn_sec_chk_user_inst_v0
					     WHERE object_id = 51560
						   AND user_id = (select user_id from srm_resources where unique_name = cUserID)
						   AND permission_code = 'READ'
					       AND object_instance_id = P.ID)
	         		)
			   AND
			   NOT EXISTS (
			   SELECT  1
			   FROM OLB_BILLINGCHECKOUT BC
			   WHERE BC.COMPANY_CODE = W.COMPANY_CODE
			   AND BC.PROJECT_CODE = W.PROJECT_CODE
			   )
			   GROUP BY W.COMPANY_CODE, W.PROJECT_CODE, P.type_, P.BILLING_CURRENCY_CODE, P.ID;
		StoO_rowcnt := SQL%ROWCOUNT;

		EXCEPTION
			WHEN NO_DATA_FOUND THEN
				NULL;
			WHEN OTHERS THEN
				StoO_error := SQLCODE;
				StoO_errmsg := SQLERRM;
	END;

	BEGIN
	StoO_error   := 0;
	StoO_rowcnt  := 0;
	UPDATE TEMP_TEMPPAC_BIL_GET_PREVIEW_S
	SET BillAmount = NVL(BillAmount, 0);
	StoO_rowcnt := SQL%ROWCOUNT;
	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			NULL;
		WHEN OTHERS THEN
			StoO_error := SQLCODE;
			StoO_errmsg := SQLERRM;
	END;


	BEGIN
	StoO_error   := 0;
	StoO_rowcnt  := 0;
	INSERT INTO TEMP_TEMPPAC_BIL_GET_PREVIEW_S (COMPANY_CODE, PROJECT_CODE, BillAmount, AmtRemaining, LevelNo, BILLING_CURRENCY_CODE, ID, ProjType)
		   SELECT  COMPANY_CODE, PROJECT_CODE, SUM(BillAmount), SUM(AmtRemaining), 10, BILLING_CURRENCY_CODE, ID, ProjType
		   FROM TEMP_TEMPPAC_BIL_GET_PREVIEW_S WHERE LevelNo = 1
		   GROUP BY COMPANY_CODE, PROJECT_CODE, BILLING_CURRENCY_CODE, ID, ProjType;
	StoO_rowcnt := SQL%ROWCOUNT;

	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			NULL;
		WHEN OTHERS THEN
			StoO_error := SQLCODE;
			StoO_errmsg := SQLERRM;
	END;

	PAC_BIL_GET_PREVIEW_SP.ProjectCodeForBillingProject := null;
	PAC_BIL_GET_PREVIEW_SP.EnforceContractAmount := null;
	PAC_BIL_GET_PREVIEW_SP.TitleForBillingProject := null;

	OPEN UF5_cursor;
	LOOP
		FETCH UF5_cursor INTO UF5_rowid, UF5_oval1;
		EXIT WHEN UF5_cursor%NOTFOUND;
		BEGIN
		StoO_error   := 0;
		StoO_rowcnt  := 0;
		PAC_BIL_GET_BILLING_PROJECT_SP( UF5_oval1, PAC_BIL_GET_PREVIEW_SP.ProjectCodeForBillingProject, PAC_BIL_GET_PREVIEW_SP.EnforceContractAmount, PAC_BIL_GET_PREVIEW_SP.TitleForBillingProject );
		UPDATE TEMP_TEMPPAC_BIL_GET_PREVIEW_S
		SET
		BILLING_PROJECT_CODE = PAC_BIL_GET_PREVIEW_SP.ProjectCodeForBillingProject,
		ENFORCE_CONTRACT_AMOUNT = NVL(PAC_BIL_GET_PREVIEW_SP.EnforceContractAmount,0)
		WHERE ROWID = UF5_rowid;
		StoO_rowcnt := SQL%ROWCOUNT;
		EXCEPTION
			WHEN NO_DATA_FOUND THEN
				NULL;
			WHEN OTHERS THEN
				StoO_error := SQLCODE;
				StoO_errmsg := SQLERRM;
		END;
	END LOOP;
	CLOSE UF5_cursor;

	BEGIN
	StoO_error   := 0;
	StoO_rowcnt  := 0;
	INSERT INTO TEMP_TEMPPAC_BIL_GET_PREVIEW_S (COMPANY_CODE, PROJECT_CODE, BillAmount, AmtRemaining, LevelNo, BILLING_CURRENCY_CODE, ProjType)
		   SELECT  COMPANY_CODE, BILLING_PROJECT_CODE, SUM(BillAmount), SUM(AmtRemaining), 20, BILLING_CURRENCY_CODE, ProjType
		   FROM TEMP_TEMPPAC_BIL_GET_PREVIEW_S WHERE LevelNo = 10 AND ENFORCE_CONTRACT_AMOUNT = 1 AND PROJTYPE = 'S'
		   GROUP BY COMPANY_CODE, BILLING_PROJECT_CODE, BILLING_CURRENCY_CODE, ProjType;
	StoO_rowcnt := SQL%ROWCOUNT;
	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			NULL;
		WHEN OTHERS THEN
			StoO_error := SQLCODE;
			StoO_errmsg := SQLERRM;
	END;

	BEGIN
	StoO_error   := 0;
	StoO_rowcnt  := 0;
	INSERT INTO TEMP_TEMPPAC_BIL_GET_PREVIEW_S (COMPANY_CODE, PROJECT_CODE, BillAmount, AmtRemaining, LevelNo, BILLING_CURRENCY_CODE, ProjType)
		   SELECT  COMPANY_CODE, BILLING_PROJECT_CODE, SUM(BillAmount), SUM(AmtRemaining), 20, BILLING_CURRENCY_CODE, ProjType
		   FROM TEMP_TEMPPAC_BIL_GET_PREVIEW_S WHERE LevelNo = 10 AND PROJTYPE = 'P'
		   GROUP BY COMPANY_CODE, BILLING_PROJECT_CODE, BILLING_CURRENCY_CODE, ProjType;
	StoO_rowcnt := SQL%ROWCOUNT;
	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			NULL;
		WHEN OTHERS THEN
			StoO_error := SQLCODE;
			StoO_errmsg := SQLERRM;
	END;


	BEGIN
	StoO_error   := 0;
	StoO_rowcnt  := 0;
	INSERT INTO TEMP_TEMPPAC_BIL_GET_PREVIEW_S (COMPANY_CODE, PROJECT_CODE, BillAmount, LevelNo, BILLING_CURRENCY_CODE, ProjType)
		   SELECT  COMPANY_CODE, BILLING_PROJECT_CODE, SUM(BillAmount), 21, BILLING_CURRENCY_CODE, ProjType
		   FROM TEMP_TEMPPAC_BIL_GET_PREVIEW_S WHERE LevelNo = 10 AND ENFORCE_CONTRACT_AMOUNT != 1 AND PROJTYPE IN ( 'S', 'R' )
		   GROUP BY COMPANY_CODE, BILLING_PROJECT_CODE, BILLING_CURRENCY_CODE, ProjType;
	StoO_rowcnt := SQL%ROWCOUNT;
	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			NULL;
		WHEN OTHERS THEN
			StoO_error := SQLCODE;
			StoO_errmsg := SQLERRM;
	END;


	OPEN UF4_cursor;
	LOOP
		FETCH UF4_cursor INTO UF4_rowid, UF4_oval1;
		EXIT WHEN UF4_cursor%NOTFOUND;
		BEGIN
		StoO_error   := 0;
		StoO_rowcnt  := 0;
		UPDATE TEMP_TEMPPAC_BIL_GET_PREVIEW_S
		SET
		AMTREMAINING = UF4_oval1
		WHERE ROWID = UF4_rowid;
		StoO_rowcnt := SQL%ROWCOUNT;
		EXCEPTION
			WHEN NO_DATA_FOUND THEN
				NULL;
			WHEN OTHERS THEN
				StoO_error := SQLCODE;
				StoO_errmsg := SQLERRM;
		END;
	END LOOP;
	CLOSE UF4_cursor;

	BEGIN
	StoO_error   := 0;
	StoO_rowcnt  := 0;
	INSERT INTO TEMP_TEMPPAC_BIL_GET_PREVIEW_S (COMPANY_CODE, PROJECT_CODE, BillAmount, AmtRemaining, LevelNo, BILLING_CURRENCY_CODE, ProjType)
		   SELECT  COMPANY_CODE, PROJECT_CODE, SUM(BillAmount), SUM(AmtRemaining), 30, BILLING_CURRENCY_CODE, ProjType
		   FROM TEMP_TEMPPAC_BIL_GET_PREVIEW_S WHERE LevelNo IN ( 20, 21 )
		   GROUP BY COMPANY_CODE, PROJECT_CODE, BILLING_CURRENCY_CODE, ProjType;
	StoO_rowcnt := SQL%ROWCOUNT;
	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			NULL;
		WHEN OTHERS THEN
			StoO_error := SQLCODE;
			StoO_errmsg := SQLERRM;
	END;

	OPEN UF1_cursor;
	LOOP
		FETCH UF1_cursor INTO UF1_rowid, UF1_oval1;
		EXIT WHEN UF1_cursor%NOTFOUND;
		BEGIN
		StoO_error   := 0;
		StoO_rowcnt  := 0;
		UPDATE TEMP_TEMPPAC_BIL_GET_PREVIEW_S
		SET
		COMPANY_NAME = UF1_oval1
		WHERE ROWID = UF1_rowid;
		StoO_rowcnt := SQL%ROWCOUNT;
		EXCEPTION
			WHEN NO_DATA_FOUND THEN
				NULL;
			WHEN OTHERS THEN
				StoO_error := SQLCODE;
				StoO_errmsg := SQLERRM;
		END;
	END LOOP;
	CLOSE UF1_cursor;

	OPEN UF2_cursor;
	LOOP
		FETCH UF2_cursor INTO UF2_rowid, UF2_oval1;
		EXIT WHEN UF2_cursor%NOTFOUND;
		BEGIN
		StoO_error   := 0;
		StoO_rowcnt  := 0;
		UPDATE TEMP_TEMPPAC_BIL_GET_PREVIEW_S
		SET
		ProjDesc = UF2_oval1
		WHERE ROWID = UF2_rowid;
		StoO_rowcnt := SQL%ROWCOUNT;
		EXCEPTION
			WHEN NO_DATA_FOUND THEN
				NULL;
			WHEN OTHERS THEN
				StoO_error := SQLCODE;
				StoO_errmsg := SQLERRM;
		END;
	END LOOP;
	CLOSE UF2_cursor;

	--Filter out the negative transactions to avoid generation of negative invoices based on the flag bGenerateNegativeInvoices
	IF  Pac_Bil_Get_Preview_Sp.bGenerateNegativeInvoices = 0 THEN
	BEGIN
		DELETE FROM TEMP_TEMPPAC_BIL_GET_PREVIEW_S WHERE BillAmount &lt; 0;
	END;
	END IF;

	DELETE FROM TEMP_TEMPPAC_BIL_GET_PREVIEW_S WHERE LevelNo != 30;

	BEGIN
		StoO_error   := 0;
        StoO_rowcnt  := 0;
		UPDATE TEMP_TEMPPAC_BIL_GET_PREVIEW_S
		   SET ProjTypeExpanded = (SELECT LV.NAME
		   	   		   	   FROM CMN_LOOKUPS_V lv
						   WHERE lv.LOOKUP_TYPE = 'PAC_PROJECT_TYPE' AND
						   		 lv.LANGUAGE_CODE = RTRIM(PAC_BIL_GET_PREVIEW_SP.cLanguageCode) AND
								 lv.LOOKUP_CODE = TEMP_TEMPPAC_BIL_GET_PREVIEW_S.ProjType);
		StoO_rowcnt := SQL%ROWCOUNT;
		EXCEPTION
		WHEN NO_DATA_FOUND THEN
			NULL;
		WHEN OTHERS THEN
			StoO_error := SQLCODE;
			StoO_errmsg := SQLERRM;
	END;

	OPEN UF6_cursor;
	LOOP
		FETCH UF6_cursor INTO UF6_rowid, UF6_oval1;
		EXIT WHEN UF6_cursor%NOTFOUND;
		BEGIN
		StoO_error   := 0;
		StoO_rowcnt  := 0;
		UPDATE TEMP_TEMPPAC_BIL_GET_PREVIEW_S
		SET
		enforce_contract_amount = UF6_oval1
		WHERE ROWID = UF6_rowid;
		StoO_rowcnt := SQL%ROWCOUNT;
		EXCEPTION
			WHEN NO_DATA_FOUND THEN
				NULL;
			WHEN OTHERS THEN
				StoO_error := SQLCODE;
				StoO_errmsg := SQLERRM;
		END;
	END LOOP;
	CLOSE UF6_cursor;

	OPEN RC1 FOR
	SELECT COMPANY_NAME,  ProjDesc,  BillAmount,  AmtRemaining,  COMPANY_CODE, PROJECT_CODE, BILLING_CURRENCY_CODE, ProjType, ProjTypeExpanded, ENFORCE_CONTRACT_AMOUNT
	FROM TEMP_TEMPPAC_BIL_GET_PREVIEW_S
	WHERE LevelNo = 30
	ORDER BY 5 , 6;
	NULL;
END Pac_Bil_Get_Preview_Sp;</definition>
        </Record>
      </Records>
      <Slice>
        <Number>0</Number>
        <Size>1</Size>
        <Total>1</Total>
      </Slice>
    </QueryResult>