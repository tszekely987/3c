<?xml version="1.0" encoding="UTF-8" standalone="no"?><QueryResult xmlns="http://www.niku.com/xog/Query" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <Code>capture3c.get_db_procedure</Code>
      <Records>
        <Record>
          <code>SP_GETCLASSES_OUTPUT</code>
          <parallel>NO</parallel>
          <definition>
  CREATE OR REPLACE EDITIONABLE PROCEDURE "PPM"."SP_GETCLASSES_OUTPUT" (
COMPANY_CODE 	VARCHAR2 ,
PROJECT_CODE 	VARCHAR2 ,
charge_code  VARCHAR2 ,
RESOURCE_CODE 	VARCHAR2 ,
clntclass 	IN OUT VARCHAR2,
projclass 	IN OUT VARCHAR2,
--costclass   IN OUT VARCHAR2,
resource_class  IN OUT VARCHAR2,
wipclass 	IN OUT VARCHAR2)
AS
StoO_selcnt	INTEGER;
StoO_error 	INTEGER;
StoO_rowcnt	INTEGER;
StoO_crowcnt	INTEGER := 0;
StoO_fetchstatus	INTEGER := 0;
StoO_errmsg	GLOBALPKG.STRING;
StoO_sqlstatus	INTEGER;
BEGIN
 /* Called From:
     Procedure         :-
     Trigger           :-
     PMD TransactionId :-
     WMD ActionId      :-
   Modified By   : Tarun
   Modified Date : 07/25/2001
*/
	BEGIN
		StoO_rowcnt := 0;
		StoO_selcnt := 0;
		StoO_error  := 0;
		SELECT   wipclass,  class
    INTO sp_getclasses_output.wipclass, sp_getclasses_output.projclass
    FROM pac_mnt_projects
		WHERE (COMPANY_CODE = sp_getclasses_output.COMPANY_CODE or COMPANY_CODE IS NULL)
		 and PROJECT_CODE = sp_getclasses_output.PROJECT_CODE;
		StoO_rowcnt := SQL%ROWCOUNT;
		EXCEPTION
			WHEN TOO_MANY_ROWS THEN
				StoO_rowcnt := 2;
			WHEN NO_DATA_FOUND THEN
				StoO_rowcnt := 0;
				StoO_selcnt := 0;
			WHEN OTHERS THEN
				StoO_rowcnt := 0;
				StoO_selcnt := 0;
				StoO_error := SQLCODE;
				StoO_errmsg := SQLERRM;
	END;
	BEGIN
		StoO_rowcnt := 0;
		StoO_selcnt := 0;
		StoO_error  := 0;
		SELECT   clntclass
		INTO sp_getclasses_output.clntclass FROM clntsupp
		WHERE COMPANY_CODE = sp_getclasses_output.COMPANY_CODE;
		StoO_rowcnt := SQL%ROWCOUNT;
		EXCEPTION
			WHEN TOO_MANY_ROWS THEN
				StoO_rowcnt := 2;
			WHEN NO_DATA_FOUND THEN
				StoO_rowcnt := 0;
				StoO_selcnt := 0;
			WHEN OTHERS THEN
				StoO_rowcnt := 0;
				StoO_selcnt := 0;
				StoO_error := SQLCODE;
				StoO_errmsg := SQLERRM;
	END;
/*
	BEGIN
		StoO_rowcnt := 0;
		StoO_selcnt := 0;
		StoO_error  := 0;
		SELECT   costclass
		INTO sp_getclasses_output.costclass FROM costcode
		WHERE costcode = sp_getclasses_output.costcode;
		StoO_rowcnt := SQL%ROWCOUNT;
		EXCEPTION
			WHEN TOO_MANY_ROWS THEN
				StoO_rowcnt := 2;
			WHEN NO_DATA_FOUND THEN
				StoO_rowcnt := 0;
				StoO_selcnt := 0;
			WHEN OTHERS THEN
				StoO_rowcnt := 0;
				StoO_selcnt := 0;
				StoO_error := SQLCODE;
				StoO_errmsg := SQLERRM;
	END;
*/
	BEGIN
		StoO_rowcnt := 0;
		StoO_selcnt := 0;
		StoO_error  := 0;
    SELECT   resource_class
    INTO sp_getclasses_output.resource_class
    FROM pac_mnt_resources
		WHERE RESOURCE_CODE = sp_getclasses_output.RESOURCE_CODE;
		StoO_rowcnt := SQL%ROWCOUNT;
		EXCEPTION
			WHEN TOO_MANY_ROWS THEN
				StoO_rowcnt := 2;
			WHEN NO_DATA_FOUND THEN
				StoO_rowcnt := 0;
				StoO_selcnt := 0;
			WHEN OTHERS THEN
				StoO_rowcnt := 0;
				StoO_selcnt := 0;
				StoO_error := SQLCODE;
				StoO_errmsg := SQLERRM;
	END;
  IF  sp_getclasses_output.resource_class IS NULL THEN
		BEGIN
			StoO_rowcnt := 0;
			StoO_selcnt := 0;
			StoO_error  := 0;
      SELECT   resource_class
      INTO sp_getclasses_output.resource_class
      FROM pac_mnt_resources
      WHERE RESOURCE_CODE = sp_getclasses_output.RESOURCE_CODE;
			StoO_rowcnt := SQL%ROWCOUNT;
			EXCEPTION
				WHEN TOO_MANY_ROWS THEN
					StoO_rowcnt := 2;
				WHEN NO_DATA_FOUND THEN
					StoO_rowcnt := 0;
					StoO_selcnt := 0;
				WHEN OTHERS THEN
					StoO_rowcnt := 0;
					StoO_selcnt := 0;
					StoO_error := SQLCODE;
					StoO_errmsg := SQLERRM;
		END;
	END IF;
END sp_getclasses_output;
 
 
 
 
 </definition>
        </Record>
      </Records>
      <Slice>
        <Number>0</Number>
        <Size>1</Size>
        <Total>1</Total>
      </Slice>
    </QueryResult>