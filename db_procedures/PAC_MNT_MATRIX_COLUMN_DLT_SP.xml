<?xml version="1.0" encoding="UTF-8" standalone="no"?><QueryResult xmlns="http://www.niku.com/xog/Query" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <Code>capture3c.get_db_procedure</Code>
      <Records>
        <Record>
          <code>PAC_MNT_MATRIX_COLUMN_DLT_SP</code>
          <parallel>NO</parallel>
          <definition>
  CREATE OR REPLACE EDITIONABLE PROCEDURE "PPM"."PAC_MNT_MATRIX_COLUMN_DLT_SP" (
columnKey 	NUMBER,
userId      NUMBER DEFAULT 1)
AS
StoO_selcnt	INTEGER;
StoO_error 	INTEGER;
StoO_rowcnt	INTEGER;
StoO_crowcnt	INTEGER := 0;
StoO_fetchstatus	INTEGER := 0;
StoO_errmsg	GLOBALPKG.STRING;
StoO_sqlstatus	INTEGER;
matrixKey   NUMBER;
columnNo 	NUMBER(3,0);
temp_RC1 	PPA_MATRIXDELETECOLUMNPkg.RCT1;
BEGIN
 /* Called From:
     Procedure         :-
     Trigger           :-
     PMD TransactionId :-
     WMD ActionId      :-
   Modified By   :Nitin
   Modified Date :07/25/01
*/

	BEGIN
		StoO_rowcnt := 0;
		StoO_selcnt := 0;
		StoO_error  := 0;
		SELECT   MatrixKey,  ColumnNo
		INTO PAC_MNT_MATRIX_COLUMN_DLT_SP.matrixKey, PAC_MNT_MATRIX_COLUMN_DLT_SP.columnNo FROM ppa_MatrixColDef
		WHERE MatrixColDefKey = PAC_MNT_MATRIX_COLUMN_DLT_SP.columnKey;
		StoO_rowcnt := SQL%ROWCOUNT;
		EXCEPTION
			WHEN TOO_MANY_ROWS THEN
				StoO_rowcnt := 2;
			WHEN NO_DATA_FOUND THEN
				StoO_rowcnt := 0;
				StoO_selcnt := 0;
			WHEN OTHERS THEN
				StoO_rowcnt := 0;
				StoO_selcnt := 0;
				StoO_error := SQLCODE;
				StoO_errmsg := SQLERRM;
	END;
	BEGIN
	ppa_MatrixDeleteColumn(iMatrixKey=&gt;PAC_MNT_MATRIX_COLUMN_DLT_SP.matrixKey,
	 iColumnNo=&gt;PAC_MNT_MATRIX_COLUMN_DLT_SP.columnNo,
	 RC1=&gt;temp_RC1,
	 userId=&gt;PAC_MNT_MATRIX_COLUMN_DLT_SP.userId);
	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			NULL;
		WHEN OTHERS THEN
			StoO_error := SQLCODE;
			StoO_errmsg := SQLERRM;
	END;
	BEGIN
	StoO_selcnt := 0;
	StoO_error  := 0;
	StoO_rowcnt := 0;
	SELECT 1 INTO StoO_selcnt
	FROM DUAL
	WHERE not EXISTS (
		SELECT  1
		 FROM ppa_MatrixColDef
		WHERE MatrixKey = PAC_MNT_MATRIX_COLUMN_DLT_SP.matrixKey );
	StoO_rowcnt := SQL%ROWCOUNT;
	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			StoO_rowcnt := 0;
			StoO_selcnt := 0;
		WHEN OTHERS THEN
			StoO_rowcnt := 0;
			StoO_selcnt := 0;
			StoO_error := SQLCODE;
			StoO_errmsg := SQLERRM;
	END;
	IF StoO_selcnt != 0 THEN
		BEGIN
		StoO_error   := 0;
		StoO_rowcnt  := 0;
		DELETE FROM ppa_MatrixValues
			WHERE MatrixKey = PAC_MNT_MATRIX_COLUMN_DLT_SP.matrixKey;
		StoO_rowcnt := SQL%ROWCOUNT;
		EXCEPTION
			WHEN NO_DATA_FOUND THEN
				NULL;
			WHEN OTHERS THEN
				StoO_error := SQLCODE;
				StoO_errmsg := SQLERRM;
		END;
	END IF;
END PAC_MNT_MATRIX_COLUMN_DLT_SP;
 
 
 
 
 </definition>
        </Record>
      </Records>
      <Slice>
        <Number>0</Number>
        <Size>1</Size>
        <Total>1</Total>
      </Slice>
    </QueryResult>