<?xml version="1.0" encoding="UTF-8" standalone="no"?><QueryResult xmlns="http://www.niku.com/xog/Query" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <Code>capture3c.get_db_procedure</Code>
      <Records>
        <Record>
          <code>CMN_ACTION_INS_SP</code>
          <parallel>NO</parallel>
          <definition>
  CREATE OR REPLACE EDITIONABLE PROCEDURE "PPM"."CMN_ACTION_INS_SP" (
   P_ACTION_CODE      IN   VARCHAR2,
   P_COMPONENT_CODE   IN   VARCHAR2,
   P_NAME         IN   VARCHAR2,
   P_DESCRIPTION        IN   VARCHAR2,
   P_ALIAS_CODE     IN   VARCHAR2 DEFAULT NULL,
   P_POLICY_CODE    IN   VARCHAR2 DEFAULT NULL,
   P_ACTION_CONTEXT   IN   VARCHAR2 DEFAULT NULL,
   P_PAGE_CODE      IN   VARCHAR2 DEFAULT NULL,
   P_IS_EXTERNAL    IN   NUMBER DEFAULT 0,
   P_IS_SYSTEM      IN   NUMBER   DEFAULT 1,
   P_IS_ACTIVE      IN   NUMBER DEFAULT 1,
   P_CREATED_BY         IN   NUMBER DEFAULT 1,
   P_IS_LINKABLE      IN NUMBER DEFAULT 0,
   P_ACTION_ID      IN NUMBER DEFAULT NULL
)
IS
   V_ACTION_COUNT       NUMBER;
   V_ACTION_ID          NUMBER;
   V_POLICY_COUNT   NUMBER;
   V_POLICY_ID      NUMBER := NULL;
   V_PAGE_COUNT     NUMBER;
   V_PAGE_ID      NUMBER := 0;
   V_CREATED_DATE   DATE := SYSDATE;
BEGIN

  -- CHECK IF ACTION EXISTS FIRST

  SELECT   COUNT (*)
  INTO     V_ACTION_COUNT
  FROM     CMN_ACTIONS
  WHERE    ACTION_CODE = P_ACTION_CODE;

    IF V_ACTION_COUNT &gt; 0 THEN
      RAISE_APPLICATION_ERROR (-20006, 'ACTION EXISTS');
    END IF;


  -- CHECK IF POLICY EXISTS

  IF ( NOT( P_POLICY_CODE IS NULL ) ) THEN
    SELECT COUNT(*)
    INTO   V_POLICY_COUNT
    FROM   CMN_SEC_POLICIES
    WHERE  POLICY_CODE = P_POLICY_CODE;

    IF V_POLICY_COUNT = 0 THEN
      RAISE_APPLICATION_ERROR( -20006, 'POLICY DOES NOT EXIST');
    END IF;

    -- GET POLICY ID

    BEGIN
       SELECT  ID
       INTO    V_POLICY_ID
       FROM    CMN_SEC_POLICIES
       WHERE   POLICY_CODE = P_POLICY_CODE;
       EXCEPTION
        WHEN OTHERS THEN
           NULL;
    END;
  END IF;

  -- CHECK IF PAGE EXISTS
  -- AND SET PAGE ID
  IF NOT (P_PAGE_CODE IS NULL) THEN

    SELECT COUNT(*)
    INTO   V_PAGE_COUNT
    FROM   CMN_PAGES
    WHERE  PAGE_CODE = P_PAGE_CODE;

    IF ( V_PAGE_COUNT = 0 ) THEN
       RAISE_APPLICATION_ERROR(-20006, 'PAGE DOES NOT EXIST');
    END IF;

    -- GET PAGE ID
    BEGIN
        SELECT ID
        INTO   V_PAGE_ID
        FROM   CMN_PAGES
        WHERE  PAGE_CODE = P_PAGE_CODE;
        EXCEPTION
             WHEN OTHERS THEN
              V_PAGE_ID := 0;
    END;

  END IF;


  -- GET NEW ACTION ID
  IF (P_ACTION_ID IS NULL) THEN
    BEGIN
      SELECT   CMN_ACTIONS_S1.NEXTVAL
      INTO     V_ACTION_ID
      FROM     DUAL;
      EXCEPTION
        WHEN OTHERS THEN
          NULL;
    END;
  ELSE
    V_ACTION_ID := P_ACTION_ID;
  END IF;


  -- ADD NEW ACTION
  INSERT INTO CMN_ACTIONS
  ( ID, ACTION_CODE, ALIAS_CODE, ACTION_CONTEXT,
    COMPONENT_CODE, POLICY_ID, PAGE_ID,
    IS_EXTERNAL, IS_SYSTEM, IS_ACTIVE, IS_SSL_ENABLED,
    PRINCIPAL_TYPE, PRINCIPAL_ID,
    CREATED_DATE, CREATED_BY, LAST_UPDATED_DATE, LAST_UPDATED_BY, IS_LINKABLE)
  VALUES
  ( V_ACTION_ID, P_ACTION_CODE, P_ALIAS_CODE, P_ACTION_CONTEXT,
    P_COMPONENT_CODE, V_POLICY_ID, V_PAGE_ID,
    P_IS_EXTERNAL, P_IS_SYSTEM, P_IS_ACTIVE, 0,
    'SYSTEM', 0,
    V_CREATED_DATE, P_CREATED_BY, V_CREATED_DATE, P_CREATED_BY, P_IS_LINKABLE );

  -- ADD ACTION CAPTIONS
  CMN_CAPTIONS_NLS_UPD_SP( 'CMN_ACTIONS', V_ACTION_ID, P_NAME, P_DESCRIPTION, P_CREATED_BY );

END;
 
 
 
 
 </definition>
        </Record>
      </Records>
      <Slice>
        <Number>0</Number>
        <Size>1</Size>
        <Total>1</Total>
      </Slice>
    </QueryResult>