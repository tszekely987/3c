<?xml version="1.0" encoding="UTF-8" standalone="no"?><QueryResult xmlns="http://www.niku.com/xog/Query" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <Code>capture3c.get_db_procedure</Code>
      <Records>
        <Record>
          <code>REV_BILL_GETDMNDBILLITEMDTL</code>
          <parallel>NO</parallel>
          <definition>
  CREATE OR REPLACE EDITIONABLE PROCEDURE "PPM"."REV_BILL_GETDMNDBILLITEMDTL" (
  cUserID   VARCHAR2 ,
  iBillSessionKey   NUMBER ,
  in_cCOMPANY_CODE  VARCHAR2 ,
  in_cPROJECT_CODE  VARCHAR2 ,
  in_cTransType   IN VARCHAR2 ,
  in_nBillAmount  IN NUMBER ,
  in_nAdjAmount   IN NUMBER ,
  in_nAmtRemain   IN NUMBER ,
  in_cCategory  IN VARCHAR2 ,
  in_cLanguage  IN VARCHAR2 ,
  in_bRefresh   IN NUMBER ,
  RC1   IN OUT REV_BILL_GETDMNDBILLITEMDTLPkg.RCT1,
  RC2   IN OUT REV_BILL_GETDMNDBILLITEMDTLPkg.RCT2,
  RC3   IN OUT REV_BILL_GETDMNDBILLITEMDTLPkg.RCT3)
AS
  iLineNo      INTEGER := 0;
  iTransNo     NUMERIC;
  cTransType  GLOBALPKG.STRING;
  cCategory   GLOBALPKG.STRING;
  cLanguage   GLOBALPKG.STRING;
  cCOMPANY_CODE   GLOBALPKG.STRING;
  cPROJECT_CODE   GLOBALPKG.STRING;
  cProject_Type   GLOBALPKG.STRING;
  nBillAmount   NUMBER;
  nAdjAmount    NUMBER;
  nAmtRemain    NUMBER;
  nBillSessionKey NUMBER;
  nCurrencyDisplayPrecision NUMBER;
  cName     TEMP_BILL_ITEM_DETAILS.NAME%TYPE;
  dTransDate    TEMP_BILL_ITEM_DETAILS.TRANSDATE%TYPE;
  cDescription  TEMP_BILL_ITEM_DETAILS.DESCRIPTION%TYPE;
  BillDetailsRow ROWID;
  StoO_selcnt INTEGER;
  StoO_error  INTEGER;
  StoO_rowcnt INTEGER;
  StoO_crowcnt  INTEGER := 0;
  StoO_fetchstatus  INTEGER := 0;
  StoO_errmsg GLOBALPKG.STRING;
  StoO_sqlstatus  INTEGER;
  V_PROJECT_UNIQUE_NAME GLOBALPKG.STRING;
  V_PROJECT_NAME GLOBALPKG.STRING;
  V_PROJECT_TYPE GLOBALPKG.STRING;
  V_COMPANY_NAME GLOBALPKG.STRING;
  V_BILLING_CURRENCY_CODE PC_BILLINGSESSION.BILLING_CURRENCY_CODE%TYPE;

  CURSOR UF1_cursor IS
    SELECT TEMP_BILL_ITEM_DETAILS.ROWID
    FROM TEMP_BILL_ITEM_DETAILS
    WHERE BILLSESSIONKEY = REV_BILL_GETDMNDBILLITEMDTL.nBillSessionKey
    ORDER BY NAME, RECORDTYPE, TRANSDATE, DESCRIPTION, TRANSNO
    FOR UPDATE OF TEMP_BILL_ITEM_DETAILS.LINE_NO;

BEGIN
	REV_BILL_GETDMNDBILLITEMDTL.cLanguage 	  := REV_BILL_GETDMNDBILLITEMDTL.in_cLanguage ;
	REV_BILL_GETDMNDBILLITEMDTL.cCOMPANY_CODE := REV_BILL_GETDMNDBILLITEMDTL.in_cCOMPANY_CODE ;
	REV_BILL_GETDMNDBILLITEMDTL.cPROJECT_CODE := REV_BILL_GETDMNDBILLITEMDTL.in_cPROJECT_CODE ;
	REV_BILL_GETDMNDBILLITEMDTL.cCategory := REV_BILL_GETDMNDBILLITEMDTL.in_cCategory ;
	REV_BILL_GETDMNDBILLITEMDTL.cTransType := REV_BILL_GETDMNDBILLITEMDTL.in_cTransType;
	REV_BILL_GETDMNDBILLITEMDTL.nBillAmount := REV_BILL_GETDMNDBILLITEMDTL.in_nBillAmount;
	REV_BILL_GETDMNDBILLITEMDTL.nAdjAmount := REV_BILL_GETDMNDBILLITEMDTL.in_nAdjAmount;
	REV_BILL_GETDMNDBILLITEMDTL.nAmtRemain := NVL( REV_BILL_GETDMNDBILLITEMDTL.in_nAmtRemain, 0);
	REV_BILL_GETDMNDBILLITEMDTL.nBillAmount :=  NVL(REV_BILL_GETDMNDBILLITEMDTL.nBillAmount,
	   0);
	REV_BILL_GETDMNDBILLITEMDTL.nAdjAmount :=  NVL(REV_BILL_GETDMNDBILLITEMDTL.nAdjAmount,
	   0);

	REV_BILL_GETDMNDBILLITEMDTL.cTransType :=  RTRIM(REV_BILL_GETDMNDBILLITEMDTL.cTransType);
	REV_BILL_GETDMNDBILLITEMDTL.nBillSessionKey := REV_BILL_GETDMNDBILLITEMDTL.iBillSessionKey;

      BEGIN
	  StoO_error   := 0;
        StoO_rowcnt  := 0;

	  SELECT CURRENCY_PRECISION
	    INTO nCurrencyDisplayPrecision
	    FROM CMN_CURRENCIES c,
	         PC_BILLINGSESSION b
	    WHERE c.CURRENCY_CODE = b.BILLING_CURRENCY_CODE AND
		    b.BILLINGSESSIONKEY = REV_BILL_GETDMNDBILLITEMDTL.nBillSessionKey;

        StoO_rowcnt := SQL%ROWCOUNT;
	  EXCEPTION
 	  WHEN NO_DATA_FOUND THEN
          NULL;
	    WHEN OTHERS THEN
	      StoO_error := SQLCODE;
	      StoO_errmsg := SQLERRM;
      END;

      IF StoO_rowcnt = 0 Then
        RAISE_APPLICATION_ERROR(-20295, 'Your billing session is no longer active. Please go to the Demand Billing query page and try again.');
        RETURN;
      END IF;

	SELECT Type_
	  INTO cProject_Type
	  FROM PAC_MNT_PROJECTS
	  WHERE COMPANY_CODE = cCOMPANY_CODE AND
	  		PROJECT_CODE = cPROJECT_CODE ;

	IF in_bRefresh != 1 THEN
	    BEGIN
		  BEGIN
		  pc_BillingDetailAllocation(REV_BILL_GETDMNDBILLITEMDTL.cUserID,
		    REV_BILL_GETDMNDBILLITEMDTL.iBillSessionKey,
		 	 REV_BILL_GETDMNDBILLITEMDTL.cCOMPANY_CODE,
		 	 REV_BILL_GETDMNDBILLITEMDTL.cPROJECT_CODE,
		 	 REV_BILL_GETDMNDBILLITEMDTL.cTransType,
			 REV_BILL_GETDMNDBILLITEMDTL.nBillAmount,
			 REV_BILL_GETDMNDBILLITEMDTL.nAdjAmount,
			 REV_BILL_GETDMNDBILLITEMDTL.nAmtRemain );
		  EXCEPTION
		  WHEN NO_DATA_FOUND THEN
			NULL;
		  WHEN OTHERS THEN
			StoO_error := SQLCODE;
			StoO_errmsg := SQLERRM;
		  END;

		DELETE FROM TEMP_BILL_ITEM_DETAILS WHERE BILLSESSIONKEY = REV_BILL_GETDMNDBILLITEMDTL.nBillSessionKey;

		INSERT INTO TEMP_BILL_ITEM_DETAILS
	    (NAME,
		 TRANSDATE,
		 DESCRIPTION,
		 QUANTITY,
		 BILLRATE,
		 TOTALAMOUNT,
		 AMOUNTREMAINING,
		 BILLAMOUNT,
		 ADJUSTAMOUNT,
		 TRANSNO,
		 BILLFLAGS,
		 NOTES,
		 BILLSESSIONKEY,
		 TRANSTYPE,
		 COMPANY_CODE,
		 PROJECT_CODE,
		 CATEGORY,
		 RECORDTYPE,
		 USERID,
		 TASK_NAME,
		 INCURRED_BY )
    SELECT R.FULL_NAME, -- RTRIM(E.firstname) || ' ' || E.lastname "Name",
         W.TransDate "TransDate",
         C.prname "CostCodeDesc",
	   	   Round( W.Quantity, 2),
	   	   WV.BillRate "BillRate",
	   	   WV.TotalAmount "TotalAmount",
	   	   WV.AmountRemaining "AmountRemaining",
	   	   LTRIM(TO_CHAR(A.BillAmount)) "BillAmount",
	   	   LTRIM(TO_CHAR(A.AdjustAmount)) "AdjustAmount",
	   	   W.TransNo "TransNo",
	   	   NVL(A.BillFlags, 'N') "BillFlags",
	   	   NVL(RTRIM(W.Notes), '') "Notes",
	   	   REV_BILL_GETDMNDBILLITEMDTL.nBillSessionKey,
	   	   W.Transtype,
	   	   cCOMPANY_CODE,
	   	   cPROJECT_CODE,
	   	   REV_BILL_GETDMNDBILLITEMDTL.cCategory,
	   	   1,
	   	   REV_BILL_GETDMNDBILLITEMDTL.cUserID,
		   T.PRNAME,
		   NVL( AP.INCURRED_BY, AP.VENDOR_CODE)
	   FROM PC_BILLINGDETAILALLOCATIONS A,
	   		PPA_WIP W,
			PPA_WIP_VALUES WV,
      PAC_MNT_RESOURCES E,
      SRM_RESOURCES R,
      prchargecode C,
			PRTASK T,
			PPA_WIPAPINFO AP
	WHERE WV.TRANSNO = W.TRANSNO
	 AND WV.CURRENCY_TYPE = 'BILLING'
	 AND A.BillingSessionKey = REV_BILL_GETDMNDBILLITEMDTL.iBillSessionKey
	 AND A.TransType = REV_BILL_GETDMNDBILLITEMDTL.cTransType
	 AND A.COMPANY_CODE = REV_BILL_GETDMNDBILLITEMDTL.cCOMPANY_CODE
	 AND A.PROJECT_CODE = REV_BILL_GETDMNDBILLITEMDTL.cPROJECT_CODE
	 AND W.TransNo = A.TransNo
	 AND W.COMPANY_CODE = A.COMPANY_CODE
	 AND W.PROJECT_CODE = A.PROJECT_CODE
	 AND W.TransType = A.TransType
	 AND W.Status = 0
	 AND W.Chargeable = 1
	 AND WV.AmountRemaining != 0
	 AND E.RESOURCE_CODE = W.RESOURCE_CODE
	 AND W.TASK_ID = T.PRID (+)
	 AND W.PPA_WIPAPINFO_ID = AP.ID (+)
   AND C.prexternalid = W.Charge_Code
   AND E.RESOURCE_CODE = R.UNIQUE_NAME;
   END;
   END IF;

/* Generate Sub-Totals for each employee */

    DELETE FROM TEMP_BILL_ITEM_DETAILS
		   WHERE BILLSESSIONKEY = REV_BILL_GETDMNDBILLITEMDTL.nBillSessionKey AND
		         RECORDTYPE = 2;

	INSERT INTO TEMP_BILL_ITEM_DETAILS
	    (NAME,
		 TOTALAMOUNT,
		 AMOUNTREMAINING,
		 BILLAMOUNT,
		 ADJUSTAMOUNT,
		 RECORDTYPE,
		 USERID,
		 BILLSESSIONKEY )
	SELECT NAME,
		 SUM(TOTALAMOUNT),
		 SUM(AMOUNTREMAINING),
		 SUM(BILLAMOUNT),
		 SUM(ADJUSTAMOUNT),
		 2,
		 REV_BILL_GETDMNDBILLITEMDTL.cUserID,
		 REV_BILL_GETDMNDBILLITEMDTL.nBillSessionKey
		FROM TEMP_BILL_ITEM_DETAILS
		WHERE BILLSESSIONKEY = REV_BILL_GETDMNDBILLITEMDTL.nBillSessionKey
		GROUP BY NAME ;

--	SELECT PAC_BIL_ITEM_DETAIL_S1.NEXTVAL INTO iLineNo FROM DUAL;

	OPEN UF1_cursor;
	LOOP
		FETCH UF1_cursor INTO BillDetailsRow;
		EXIT WHEN UF1_cursor%NOTFOUND;
		BEGIN
		StoO_error   := 0;
		StoO_rowcnt  := 0;

		UPDATE TEMP_BILL_ITEM_DETAILS
       SET LINE_NO = iLineNo
     WHERE ROWID = BillDetailsRow;
		StoO_rowcnt := SQL%ROWCOUNT;
		EXCEPTION
			WHEN NO_DATA_FOUND THEN
				NULL;
			WHEN OTHERS THEN
				StoO_error := SQLCODE;
				StoO_errmsg := SQLERRM;
		END;
		iLineNo := iLineNo + 1;
	END LOOP;
	CLOSE UF1_cursor;
	
	select I.CODE,
	 		I.NAME,
			LV.NAME,
			C.COMPANY_NAME,
			B.BILLING_CURRENCY_CODE
	INTO V_PROJECT_UNIQUE_NAME,
		 V_PROJECT_NAME,
		 V_PROJECT_TYPE,
		 V_COMPANY_NAME,
		 V_BILLING_CURRENCY_CODE
	from CMN_LOOKUPS_V LV,
		 PAC_MNT_PROJECTS P,
		 INV_INVESTMENTS I,
		 CLNTSUPP C,
		 PC_BILLINGSESSION B
	where B.BILLINGSESSIONKEY = REV_BILL_GETDMNDBILLITEMDTL.nBillSessionKey AND
		  P.PROJECT_CODE = REV_BILL_GETDMNDBILLITEMDTL.cPROJECT_CODE and
		  P.COMPANY_CODE = REV_BILL_GETDMNDBILLITEMDTL.cCOMPANY_CODE and
		  P.ID = I.ID AND
		  P.COMPANY_CODE = C.COMPANY_CODE AND
		  LV.LOOKUP_TYPE = 'PAC_PROJECT_TYPE' AND
		  LANGUAGE_CODE = REV_BILL_GETDMNDBILLITEMDTL.cLanguage AND
		  LV.LOOKUP_CODE = P.TYPE_;

	OPEN RC1 FOR
	SELECT NAME,
		 TRANSDATE,
		 DESCRIPTION,
		 QUANTITY,
		 BILLRATE,
		 TOTALAMOUNT,
		 AMOUNTREMAINING,
		 BILLAMOUNT,
		 ADJUSTAMOUNT,
		 TRANSNO,
		 BILLFLAGS,
		 NOTES,
		 BILLSESSIONKEY,
     LINE_NO,
		 TRANSTYPE,
		 SIGN(NVL(LENGTH(NOTES), 0)),
		 COMPANY_CODE,
		 PROJECT_CODE,
		 CATEGORY,
		 RECORDTYPE,
		 nCurrencyDisplayPrecision,
		 'demandBillingContractBillSchedule',
		 cProject_Type,
		 TASK_NAME,
		 INCURRED_BY,
		 V_BILLING_CURRENCY_CODE currency_code
	 FROM TEMP_BILL_ITEM_DETAILS
	 WHERE BILLSESSIONKEY = REV_BILL_GETDMNDBILLITEMDTL.nBillSessionKey
	 ORDER BY 1, 20, 2, 3, 10;

	 OPEN RC2 FOR
	 SELECT SUM(TOTALAMOUNT),
	 		SUM(AMOUNTREMAINING),
			SUM(BILLAMOUNT),
			SUM(ADJUSTAMOUNT)
	 FROM TEMP_BILL_ITEM_DETAILS
	 WHERE BILLSESSIONKEY = REV_BILL_GETDMNDBILLITEMDTL.nBillSessionKey
	 AND RECORDTYPE = 1;

 	 OPEN RC3 FOR
	 SELECT V_PROJECT_UNIQUE_NAME,
		 	V_PROJECT_NAME,
		 	V_PROJECT_TYPE,
			REV_BILL_GETDMNDBILLITEMDTL.cCategory,
			REV_BILL_GETDMNDBILLITEMDTL.cCOMPANY_CODE,
		 	V_COMPANY_NAME,
		 	V_BILLING_CURRENCY_CODE
	 FROM DUAL;

--	DELETE FROM TEMP_BILL_ITEM_DETAILS;
END REV_BILL_GETDMNDBILLITEMDTL;
 
 
 
 
 </definition>
        </Record>
      </Records>
      <Slice>
        <Number>0</Number>
        <Size>1</Size>
        <Total>1</Total>
      </Slice>
    </QueryResult>