<?xml version="1.0" encoding="UTF-8" standalone="no"?><QueryResult xmlns="http://www.niku.com/xog/Query" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <Code>capture3c.get_db_procedure</Code>
      <Records>
        <Record>
          <code>NBI_PROJECT_CURRENT_FACTS_SP</code>
          <parallel>NO</parallel>
          <definition>
  CREATE OR REPLACE EDITIONABLE PROCEDURE "PPM"."NBI_PROJECT_CURRENT_FACTS_SP" (
   P_CURRENCY_CODE VARCHAR2
)
IS

	V_STMT                        VARCHAR2 (1000);
	V_SQL                         VARCHAR2 (2000);
	V_FORECAST_CNT				 NUMBER:=0;
	V_FM_CNT						 NUMBER:=0;
	V_IS_XDM_INSTALLED			 CHAR(1):='N';
	V_XDM_GOALS_EXIST			 CHAR(1):='N';
	v_b1_index_ts_name VARCHAR2(255);
	v_b2_index_ts_name VARCHAR2(255);
	v_b3_index_ts_name VARCHAR2(255);
	v_b4_index_ts_name VARCHAR2(255);
	v_b5_index_ts_name VARCHAR2(255);
	v_u1_index_ts_name  VARCHAR2(255);
    v_default_ts_name VARCHAR2(255);

	TYPE NBI_PCF_ARRAY IS TABLE OF NBI_PROJECT_CURRENT_FACTS%ROWTYPE  INDEX BY BINARY_INTEGER;

	NBI_PCF_DATA NBI_PCF_ARRAY;


	CURSOR NBI_PCF_CURSOR IS
	SELECT  PROJECT_ID, OBS1_UNIT_ID, OBS2_UNIT_ID, OBS3_UNIT_ID, OBS4_UNIT_ID,	OBS5_UNIT_ID,  sysdate LAST_UPDATED, PROJECT_CODE, PROJECT_NAME, IS_ACTIVE,
			BILLING_PROJECT_ID, CONTRACT_AMOUNT, CONTRACT_NUMBER, CONTRACT_DATE, SPONSOR,CUSTOMER_ID, CUSTOMER, CUSTOMER_CODE, CUSTOMER_CLASS, CUSTOMER_CLASS_NAME,
			CMN_EXCHANGERATE_PKG.CMN_GET_ONLYCONVERTED_VAL_FCT (
					SYSDATE,
					REVENUE_CURRENCY_CODE,
					P_CURRENCY_CODE,
					OPP_REVENUE,
					LABOR_EXCHANGE_RATE_TYPE
				 ) OPP_REVENUE,
			OPP_STAGE, OPP_PROBABILITY, OPP_EXPECTED_CLOSE_DATE, OPP_STATUS, OPP_TRACK_ON_PIPELINE, ACCOUNT_EXECUTIVE_ID, AE_LAST_NAME, AE_FIRST_NAME,
			MANAGER_ID, MANAGER_LAST_NAME, MANAGER_FIRST_NAME, ENTITY, ENTITY_NAME,	LOCATION, LOCATION_NAME, DEPARTMENT, DEPARTMENT_NAME, FM_STATUS,
			PROJECT_CLASS, WIP_CLASS, PROJECT_TYPE, IS_APPROVED, GOAL_SCORE, PRIORITY,START_DATE, BASE_START_DATE, FINISH_DATE, BASE_FINISH_DATE, START_VARIANCE,
			FINISH_VARIANCE, BUDGET_HOURS, ACTUAL_HOURS, ACTUAL_WIP_HOURS,BASELINE_HOURS, ETC_HOURS, ALLOCATED_HOURS, REV_BUDGET_LABOR,
			REV_BUDGET_EQUIP, REV_BUDGET_EXPENSE, REV_BUDGET_MATL, REV_BUDGET_TOTAL,COST_BUDGET_LABOR, COST_BUDGET_EQUIP, COST_BUDGET_EXPENSE, COST_BUDGET_MATL,
			COST_BUDGET_TOTAL, ACT_BILLING, ACT_WIP_QTY, REV_ACT_LABOR, REV_ACT_EQUIP,REV_ACT_EXPENSE, REV_ACT_MATL, REV_ACT_TOTAL, COST_ACT_LABOR, COST_ACT_EQUIP,
			COST_ACT_EXPENSE, COST_ACT_MATL, COST_ACT_TOTAL, COST_ETC_LABOR,COST_ETC_EQUIP, COST_ETC_EXPENSE, COST_ETC_MATL, COST_ETC_TOTAL,
			COST_BASE_LABOR, COST_BASE_EQUIP, COST_BASE_EXPENSE, COST_BASE_MATL,COST_BASE_TOTAL, REV_BASE_LABOR, REV_BASE_EQUIP, REV_BASE_EXPENSE,
			REV_BASE_MATL, REV_BASE_TOTAL, PCT_PLAN_EXPANDED, PCT_BUDGET_EXPANDED,PCT_COMPLETE, EARNED_VALUE, PLANNED_VALUE, SCHEDULE_VARIANCE, COST_VARIANCE,
			CPI_NUMBER, SPI_NUMBER, BUDGET_MARGIN, BUDGET_REV_NUMBER, ROI_DATE,	OPEN_TASKS, CLOSED_TASKS, OPEN_ISSUES, CLOSED_ISSUES, OPEN_RISKS,
			CLOSED_RISKS, P_CURRENCY_CODE CURRENCY_CODE, STOPLIGHT_1, STOPLIGHT_2, STOPLIGHT_3,STOPLIGHT_4, STOPLIGHT_5, STOPLIGHT_6, STOPLIGHT_7, STOPLIGHT_8, STOPLIGHT_9,
			STOPLIGHT_10, STOPLIGHT_11, STOPLIGHT_12, STOPLIGHT_13, STOPLIGHT_14,	STOPLIGHT_15, IS_OPP_ENABLED, IS_FM_ENABLED, IS_MGMT_ENABLED, REV_ETC_LABOR,
			REV_ETC_EQUIP, REV_ETC_EXPENSE, REV_ETC_MATL, REV_ETC_TOTAL
	FROM   NBI_PROJECT_CURRENT_FACTS_V;
BEGIN

	EXECUTE IMMEDIATE 'TRUNCATE TABLE NBI_PROJECT_CURRENT_FACTS';
    SELECT DEFAULT_TABLESPACE INTO v_default_ts_name from user_users;
	SELECT NVL(MAX(tablespace_name),v_default_ts_name)  into v_b1_index_ts_name FROM   user_indexes   WHERE      table_name = 'NBI_PROJECT_CURRENT_FACTS' AND index_name='NBI_PROJECT_CURRENT_FACTS_B1';
	SELECT NVL(MAX(tablespace_name),v_default_ts_name)  into v_b2_index_ts_name FROM   user_indexes   WHERE      table_name = 'NBI_PROJECT_CURRENT_FACTS' AND index_name='NBI_PROJECT_CURRENT_FACTS_B2';
	SELECT NVL(MAX(tablespace_name),v_default_ts_name)  into v_b3_index_ts_name FROM   user_indexes   WHERE      table_name = 'NBI_PROJECT_CURRENT_FACTS' AND index_name='NBI_PROJECT_CURRENT_FACTS_B3';
	SELECT NVL(MAX(tablespace_name),v_default_ts_name)  into v_b4_index_ts_name FROM   user_indexes   WHERE      table_name = 'NBI_PROJECT_CURRENT_FACTS' AND index_name='NBI_PROJECT_CURRENT_FACTS_B4';
	SELECT NVL(MAX(tablespace_name),v_default_ts_name)  into v_b5_index_ts_name FROM   user_indexes   WHERE      table_name = 'NBI_PROJECT_CURRENT_FACTS' AND index_name='NBI_PROJECT_CURRENT_FACTS_B5';
	
	CMN_DROP_INDEX_SP('NBI_PROJECT_CURRENT_FACTS_B1');
	CMN_DROP_INDEX_SP('NBI_PROJECT_CURRENT_FACTS_B2');
	CMN_DROP_INDEX_SP('NBI_PROJECT_CURRENT_FACTS_B3');
	CMN_DROP_INDEX_SP('NBI_PROJECT_CURRENT_FACTS_B4');
	CMN_DROP_INDEX_SP('NBI_PROJECT_CURRENT_FACTS_B5');

	V_STMT := 'Is FM enabled?';
	SELECT  COUNT(1)
	INTO    V_FM_CNT
	FROM    PAC_MNT_PROJECTS
	WHERE   --ID = P_PROJECT_ID AND
			LOCATIONID IS NOT NULL
	AND 	DEPARTCODE IS NOT NULL
	AND		ROWNUM=1;

   -- Is XDM installed?
   SELECT NVL (MAX ('Y'), 'N') INTO V_IS_XDM_INSTALLED FROM USER_TAB_COLUMNS WHERE TABLE_NAME = 'XDM_ACT_EST_BENEFITS' AND COLUMN_NAME = 'XDM_EST_ROI_DT';
   -- Does Goals exist?
   SELECT NVL (MAX ('Y'), 'N') INTO V_XDM_GOALS_EXIST FROM USER_TAB_COLUMNS WHERE TABLE_NAME = 'XDM_ACT_CORPORATE_GOALS' AND COLUMN_NAME = 'XDM_GOAL_01';

   IF V_FM_CNT &gt; 0 THEN
	BEGIN
      V_STMT := 'Calling NBI_PRTF_FM_SP since FM is enabled';
	  EXECUTE IMMEDIATE 'TRUNCATE TABLE NBI_PRTF_FM';

	  SELECT NVL(MAX(tablespace_name),v_default_ts_name)  into v_u1_index_ts_name FROM   user_indexes   WHERE      table_name = 'NBI_PRTF_FM' AND index_name='NBI_PRTF_FM_U1';
	  CMN_DROP_INDEX_SP('NBI_PRTF_FM_U1');
	  NBI_PRTF_FM_SP (P_CURRENCY_CODE);
	  CMN_CREATE_INDEX_SP('NBI_PRTF_FM','NBI_PRTF_FM_U1','UNIQUE','PROJECT_ID',v_u1_index_ts_name);
	  END;
   END IF;

   V_STMT := ' Are there any project forecast records for any projects?';
   SELECT 	COUNT(1)
   INTO 	V_FORECAST_CNT
   FROM 	FIN_PLANS
   WHERE 	--OBJECT_ID = P_PROJECT_ID AND
			IS_PLAN_OF_RECORD = 1 AND ROWNUM=1;
	IF V_FORECAST_CNT &gt; 0 THEN
	BEGIN
      V_STMT := 'Calling NBI_PROJECT_FORECAST_SP since there are projects with Forecast';
      NBI_PROJECT_FORECAST_SP (P_CURRENCY_CODE);
	END;
	END IF;

		-- Use APPEND_VALUES as part of INSERT with BULK Operation.
	OPEN NBI_PCF_CURSOR;
	  LOOP
		FETCH NBI_PCF_CURSOR
		BULK COLLECT INTO NBI_PCF_DATA LIMIT 10000;
		FORALL I IN 1..NBI_PCF_DATA.COUNT
		INSERT /*+ APPEND_VALUES */ INTO NBI_PROJECT_CURRENT_FACTS VALUES NBI_PCF_DATA(I);
		COMMIT;
		EXIT WHEN NBI_PCF_CURSOR%NOTFOUND;
	END LOOP;
	CLOSE NBI_PCF_CURSOR;
	COMMIT;
V_STMT := 'CREATING INDICES on NBI_PRT_FACTS';
DBMS_OUTPUT.PUT_LINE (V_STMT);
CMN_CREATE_INDEX_SP('NBI_PROJECT_CURRENT_FACTS','NBI_PROJECT_CURRENT_FACTS_B1','','OBS1_UNIT_ID',v_b1_index_ts_name);
CMN_CREATE_INDEX_SP('NBI_PROJECT_CURRENT_FACTS','NBI_PROJECT_CURRENT_FACTS_B2','','OBS2_UNIT_ID',v_b2_index_ts_name);
CMN_CREATE_INDEX_SP('NBI_PROJECT_CURRENT_FACTS','NBI_PROJECT_CURRENT_FACTS_B3','','OBS3_UNIT_ID',v_b3_index_ts_name);
CMN_CREATE_INDEX_SP('NBI_PROJECT_CURRENT_FACTS','NBI_PROJECT_CURRENT_FACTS_B4','','OBS4_UNIT_ID',v_b4_index_ts_name);
CMN_CREATE_INDEX_SP('NBI_PROJECT_CURRENT_FACTS','NBI_PROJECT_CURRENT_FACTS_B5','','OBS5_UNIT_ID',v_b5_index_ts_name);


IF V_IS_XDM_INSTALLED = 'Y' THEN
	UPDATE 	NBI_PROJECT_CURRENT_FACTS	PCF
	SET ROI_DATE= NBI_COMMITMENTS_ROIDATE_FCT(PCF.PROJECT_ID)
	WHERE ROI_DATE IS NULL;
END IF;
IF V_XDM_GOALS_EXIST = 'Y' THEN
	UPDATE 	NBI_PROJECT_CURRENT_FACTS	PCF
	SET GOAL_SCORE= NBI_COMMITMENTS_GOAL_FCT(PCF.PROJECT_ID);
END IF;


EXCEPTION
   WHEN OTHERS
   THEN
      RAISE_APPLICATION_ERROR (-20000, 'Error in NBI_PROJECT_CURRENT_FACTS_SP - ' || V_STMT || ': ' || SQLERRM);
END;</definition>
        </Record>
      </Records>
      <Slice>
        <Number>0</Number>
        <Size>1</Size>
        <Total>1</Total>
      </Slice>
    </QueryResult>