<ClarityDBViewQuery>
  <QueryResult code="DWH_INV_TEAM_PER_FACTS_V">
    <indexes/>
    <text_length>8431</text_length>
    <text>SELECT s.prj_object_id team_key,
           CASE WHEN sk.period_type = 'WEEKLY' THEN CAST(s.slice_date - TO_DATE ('01/01/2000','MM/DD/YYYY') + 2000000 AS INTEGER)
                ELSE CAST(s.slice_date - TO_DATE ('01/01/2000','MM/DD/YYYY') + 3000000 AS INTEGER) END period_key,
           CASE WHEN sk.field_type = 2 THEN s.slice 
                WHEN sk.field_type = 1 THEN (-1 * s.slice)
                ELSE 0 END soft_alloc_hours,
           CASE WHEN sk.field_type = 1 THEN s.slice ELSE 0 END hard_alloc_hours,
           CASE WHEN sk.field_type = 2 THEN s.slice ELSE 0 END alloc_hours,
           0 base_hours,
           CASE WHEN sk.field_type = 4 THEN s.slice
                WHEN sk.field_type = 3 THEN (-1 * s.slice)
                ELSE 0 END soft_alloc_cost,
           CASE WHEN sk.field_type = 3 THEN s.slice ELSE 0 END hard_alloc_cost,
           CASE WHEN sk.field_type = 4 THEN s.slice ELSE 0 END alloc_cost,
           0 base_cost,
           t.last_updated_date clarity_updated_date
    FROM  (SELECT id request_key,
                  CASE WHEN request_name IN ('WEEKLYRESOURCEHARDALLOC','MONTHLYRESOURCEHARDALLOC') THEN 1
                       WHEN request_name IN ('WEEKLYRESOURCEALLOCCURVE','MONTHLYRESOURCEALLOCCURVE') THEN 2
                       WHEN request_name LIKE 'team::hardallccost_curve%' THEN 3
                       WHEN request_name LIKE 'team::alloccost_curve%' THEN 4
                  END field_type,
                  CASE WHEN period = 1 THEN 'WEEKLY' ELSE 'MONTHLY' END period_type
           FROM   prj_blb_slicerequests
           WHERE  ((SELECT monthly_slices FROM dwh_settings) = 1
           AND      request_name IN ('MONTHLYRESOURCEHARDALLOC',
                                     'team::hardallccost_curve::dwh_month',
                                     'MONTHLYRESOURCEALLOCCURVE',
                                     'team::alloccost_curve::dwh_month'))
           UNION ALL
           SELECT id request_key,
                  CASE WHEN request_name IN ('WEEKLYRESOURCEHARDALLOC','MONTHLYRESOURCEHARDALLOC') THEN 1
                       WHEN request_name IN ('WEEKLYRESOURCEALLOCCURVE','MONTHLYRESOURCEALLOCCURVE') THEN 2
                       WHEN request_name LIKE 'team::hardallccost_curve%' THEN 3
                       WHEN request_name LIKE 'team::alloccost_curve%' THEN 4
                  END field_type,
                  CASE WHEN period = 1 THEN 'WEEKLY' ELSE 'MONTHLY' END period_type
           FROM   prj_blb_slicerequests
           WHERE  ((SELECT weekly_slices FROM dwh_settings) = 1
           AND      request_name IN ('WEEKLYRESOURCEHARDALLOC',
                                     'team::hardallccost_curve::dwh_week',
                                     'WEEKLYRESOURCEALLOCCURVE',
                                     'team::alloccost_curve::dwh_week'))) sk
           INNER JOIN prj_blb_slices s ON sk.request_key = s.slice_request_id
           INNER JOIN prTeam t ON s.prj_object_id = t.prid
    WHERE s.slice &lt;&gt; 0
    UNION ALL
    SELECT s.prj_object_id team_key,
           s.period_id period_key,
           CASE WHEN sk.field_type = 2 THEN s.slice 
                WHEN sk.field_type = 1 THEN (-1 * s.slice)
                ELSE 0 END soft_alloc_hours,
           CASE WHEN sk.field_type = 1 THEN s.slice ELSE 0 END hard_alloc_hours,
           CASE WHEN sk.field_type = 2 THEN s.slice ELSE 0 END alloc_hours,
           0 base_hours,
           CASE WHEN sk.field_type = 4 THEN s.slice
                WHEN sk.field_type = 3 THEN (-1 * s.slice)
                ELSE 0 END soft_alloc_cost,
           CASE WHEN sk.field_type = 3 THEN s.slice ELSE 0 END hard_alloc_cost,
           CASE WHEN sk.field_type = 4 THEN s.slice ELSE 0 END alloc_cost,
           0 base_cost,
           t.last_updated_date clarity_updated_date
    FROM  (SELECT id request_key,
                  CASE WHEN request_name LIKE 'team::hard_curve%' THEN 1
                       WHEN request_name LIKE 'team::pralloccurve%' THEN 2
                       WHEN request_name LIKE 'team::hardallccost_curve%' THEN 3
                       WHEN request_name LIKE 'team::alloccost_curve%' THEN 4
                  END field_type,
                  period period_type
           FROM   prj_blb_slicerequests
           WHERE (SELECT fiscal_slices FROM dwh_settings) = 1
           AND    request_name IN ('team::hard_curve::dwh_fiscal',
                                   'team::hardallccost_curve::dwh_fiscal',
                                   'team::pralloccurve::dwh_fiscal',
                                   'team::alloccost_curve::dwh_fiscal')) sk
           INNER JOIN prj_fiscal_blb_slices s ON sk.request_key = s.slice_request_id
           INNER JOIN prTeam t ON s.prj_object_id = t.prid
    WHERE s.slice &lt;&gt; 0
    UNION ALL
    SELECT bd.object_id team_key,
           CASE WHEN sk.period_type = 'WEEKLY' THEN CAST(s.slice_date - TO_DATE ('01/01/2000','MM/DD/YYYY') + 2000000 AS INTEGER)
                ELSE CAST(s.slice_date - TO_DATE ('01/01/2000','MM/DD/YYYY') + 3000000 AS INTEGER) END period_key,
           0 soft_alloc_hours,
           0 hard_alloc_hours,
           0 alloc_hours,
           CASE WHEN sk.field_type = 5 THEN s.slice ELSE 0 END base_hours,
           0 soft_alloc_cost,
           0 hard_alloc_cost,
           0 alloc_cost,
           CASE WHEN sk.field_type = 6 THEN s.slice ELSE 0 END base_cost,
           t.last_updated_date clarity_updated_date
    FROM  (SELECT id request_key,
                  CASE WHEN request_name LIKE 'baseline::current_team_usage%' THEN 5
                       WHEN request_name LIKE 'baseline::current_team_cost%' THEN 6
                  END field_type,
                  CASE WHEN period = 1 THEN 'WEEKLY' ELSE 'MONTHLY' END period_type
           FROM   prj_blb_slicerequests
           WHERE  is_dwh_request = 1
           AND    is_active = 1
           AND   (SELECT monthly_slices FROM dwh_settings) = 1
           AND    request_name IN ('baseline::current_team_usage::dwh_month',
                                   'baseline::current_team_cost::dwh_month')
           UNION ALL
           SELECT id request_key,
                  CASE WHEN request_name LIKE 'baseline::current_team_usage%' THEN 5
                       WHEN request_name LIKE 'baseline::current_team_cost%' THEN 6
                  END field_type,
                  CASE WHEN period = 1 THEN 'WEEKLY' ELSE 'MONTHLY' END period_type
           FROM   prj_blb_slicerequests
           WHERE  is_dwh_request = 1
           AND    is_active = 1
           AND   (SELECT weekly_slices FROM dwh_settings) = 1
           AND    request_name IN ('baseline::current_team_usage::dwh_week',  
                                    'baseline::current_team_cost::dwh_week')) sk
           INNER JOIN prj_blb_slices s ON sk.request_key = s.slice_request_id
           INNER JOIN prj_baseline_details bd ON s.prj_object_id = bd.id
           INNER JOIN prTeam t ON bd.object_id = t.prID
    WHERE  bd.object_type = 'TEAM'
    AND    bd.is_current = 1
    AND    s.slice &lt;&gt; 0
    UNION ALL
    SELECT bd.object_id team_key,
           s.period_id period_key,
           0 soft_alloc_hours,
           0 hard_alloc_hours,
           0 alloc_hours,
           CASE WHEN sk.field_type = 5 THEN s.slice ELSE 0 END base_hours,
           0 soft_alloc_cost,
           0 hard_alloc_cost,
           0 alloc_cost,
           CASE WHEN sk.field_type = 6 THEN s.slice ELSE 0 END base_cost,
           t.last_updated_date clarity_updated_date
    FROM  (SELECT id request_key,
                  CASE WHEN request_name LIKE 'baseline::current_team_usage%' THEN 5
                       WHEN request_name LIKE 'baseline::current_team_cost%' THEN 6
                  END field_type,
                  period period_type
           FROM   prj_blb_slicerequests
           WHERE  is_dwh_request = 1
           AND    is_active = 1
           AND   (SELECT fiscal_slices FROM dwh_settings) = 1
           AND    request_name IN ('baseline::current_team_usage::dwh_fiscal',
                                   'baseline::current_team_cost::dwh_fiscal')) sk
           INNER JOIN prj_fiscal_blb_slices s ON sk.request_key = s.slice_request_id
           INNER JOIN prj_baseline_details bd ON s.prj_object_id = bd.id
           INNER JOIN prTeam t ON bd.object_id = t.prID
    WHERE  bd.object_type = 'TEAM'
    AND    bd.is_current = 1
    AND    s.slice &lt;&gt; 0</text>
  </QueryResult>
</ClarityDBViewQuery>
