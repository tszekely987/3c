<ClarityDBViewQuery>
  <QueryResult code="ODF_PROJECT_V2">
    <indexes/>
    <text_length>31066</text_length>
    <text>select   'x' pmd_analytical_partition_by, inv_investments.id odf_pk, inv_projects.RCF_ORG_CULTURE as rcf_org_culture, odf_ca_project.agl_inv_category as agl_inv_category, fin_financials.FORECAST_CST_TOTAL as forecast_cst_total, PAC_MNT_PROJECTS.APPROVED as approved, inv_investments.RCF_HUMAN_INTERFACE as inv_rcf_human_intrf, fin_financials.FORECAST_BREAKEVEN as forecast_breakeven, inv_investments.code as unique_code, PAC_MNT_PROJECTS.TRANSRATESOURCEMATERIALS as trans_rate_mtl_src, fin_financials.BUDGET_NPV as budget_npv, PAC_MNT_PROJECTS.BILLING_CURRENCY_CODE as bill_currency_code, inv_investments.RCF_SPONSORSHIP as inv_rcf_sponsorship, fin_financials.total_cost_of_capital as override_val_for_tcc, odf_ca_project.obj_est_factor1 as obj_est_factor1, odf_ca_project.obj_est_factor2 as obj_est_factor2, fin_financials.BUDGET_CST_FINISH as budget_cst_finish, fin_financials.BUDGET_MIRR as budget_mirr, EVREC.ITD_BCWS as ev_bcws, EVREC.ITD_BCWP as ev_bcwp, INV_INVESTMENTS.odf_object_code as investment_type, inv_investments.labor_etc_curve as labor_etc, PAC_MNT_PROJECTS.AFFILIATEPROJECT as affiliate_project, PAC_MNT_PROJECTS.MASTER_PROJECT_CODE as master_project_code, UPDATED.FULL_NAME as updated_by, inv_investments.STAGE_CODE as stage_code, odf_ca_inv.obj_align_factor2 as obj_align_factor2, odf_ca_inv.obj_align_factor1 as obj_align_factor1, PAC_MNT_PROJECTS.MATERIALS_EXCHANGE_RATE_TYPE as mtl_xchg_rate_type, UPDATED.ID as updated_by_id, odf_ca_inv.obj_align_factor4 as obj_align_factor4, odf_ca_project.agl_pctdon_stc as agl_pctdon_stc, odf_ca_inv.obj_align_factor3 as obj_align_factor3, odf_ca_inv.obj_align_factor6 as obj_align_factor6, odf_ca_inv.obj_align_factor5 as obj_align_factor5, (NVL(INV_INVESTMENTS.labor_eacsum,0)/3600)/(select hours_per_day from prj_hours_per_day_v) as ttl_effort, fin_financials.BUDGET_REV_FINISH as budget_rev_finish, (
          SELECT LISTAGG( value , ', ') WITHIN GROUP (ORDER BY value)  FROM
          (

            select  omvl2.value
            from
            odf_multi_valued_lookups omvl
            inner join inv_investments inv on inv.ODF_OBJECT_CODE || ':' || inv.id = omvl.value and omvl.object = 'odf_agreement'
            and omvl.attribute = 'successors'
            inner join odf_multi_valued_lookups omvl2 on omvl2.pk_id = omvl.pk_id and omvl2.object = 'odf_agreement' and omvl2.attribute = 'predecessors'
            where
            inv.id = INV_INVESTMENTS.ID
            FETCH NEXT 25 ROWS ONLY
          )
        ) as invagmntpredecessors, odf_ca_inv.obj_int_lastsync_sts as obj_int_lastsync_sts, inv_projects.ev_bcwp_ovr as ev_bcwp_ovr, fin_financials.FORECAST_CST_OPERATING as fcst_cst_op, fin_financials.FORECAST_ROI as forecast_roi, odf_ca_project.agl_prelim_est as agl_prelim_est, odf_ca_project.obj_request_category as obj_request_category, ( SELECT CASE CMN_PAGES.PRINCIPAL_TYPE WHEN 'SYSTEM' THEN CMN_PAGES.ID ELSE
          NVL(CMN_PAGES.ORIGINATING_PAGE_ID,CMN_PAGES.ID) END
          FROM CMN_INSTANCE_PAGES, CMN_PAGES
          WHERE CMN_INSTANCE_PAGES.PAGE_FRAME_ID = CMN_PAGES.ID
          AND CMN_INSTANCE_PAGES.OBJECT_INSTANCE_ID = INV_INVESTMENTS.ID
          AND CMN_INSTANCE_PAGES.OBJECT_TYPE = 'SRM_PROJECTS' ) as page_layout, odf_ca_project.lc_problem as lc_problem, inv_investments.labor_variance_curve as labor_variance, fin_financials.PLANNED_CST_TOTAL as planned_cst_total, PAC_MNT_PROJECTS.BILLCYCLE as batch_cycle, (case when inv_investments.schedule_start is not null and inv_investments.schedule_finish is not null THEN
        (NVL(INV_INVESTMENTS.LABOR_EACSUM,0) / 3600 / PRJ_HPD_FACTOR_FCT())
    ELSE 0 end) as labor_eacsum, PAC_MNT_PROJECTS.TRANSCOSTSOURCEEXPENSES as trans_cost_exp_src, odf_ca_project.agl_lastsync_dt as agl_lastsync_dt, EVREC.BAC as ev_bac, inv_investments.RCF_IMPLEMENTATION as inv_rcf_impl, odf_ca_project.lc_solution as lc_solution, fin_financials.PLANNED_ROI as planned_roi, fin_financials.PLANNED_BEN_FINISH as planned_ben_finish, fin_financials.PLANNED_COST_OPERATING as plan_cost_op, odf_ca_project.agl_sync as agl_sync, inv_investments.GOAL_CODE as goal_code, odf_ca_project.agl_pln_finish as agl_pln_finish, ( select poa.unit_id from prj_obs_associations poa, prj_obs_units pou, prj_obs_types pot, prj_obs_object_types poot where  NLS_UPPER(poa.table_name) = NLS_UPPER('SRM_PROJECTS') and poa.record_id = INV_INVESTMENTS.ID and poa.unit_id = pou.id and pou.type_id = pot.id   and pot.id = poot.type_id and NLS_UPPER(poa.table_name) = NLS_UPPER(poot.table_name) and NLS_UPPER(poot.assoc_att_code) = NLS_UPPER('odf_orga_n927041378') ) as odf_orga_n927041378, (SELECT COUNT(1) FROM DUAL WHERE EXISTS (SELECT 1 FROM odf_multi_valued_lookups WHERE object = 'odf_agreement' AND attribute IN (
	    'successors' , 'predecessors' ) AND value = CONCAT(CONCAT(INV_INVESTMENTS.ODF_OBJECT_CODE,':'),INV_INVESTMENTS.id))) as inv_has_agreements, BASEREC.COST_SUM as baseline_cost, inv_investments.schedule_start as schedule_start, (NVL((SELECT 1 FROM DUAL WHERE EXISTS (SELECT 1 from NMC_CONVERSATIONS TC WHERE TC.RESOURCE_NAME='project' AND TC.RESOURCE_ID = inv_investments.id)), 0)) as has_conversations, PAC_MNT_PROJECTS.PROJECT_CODE as project_code, odf_ca_project.agl_act_start as agl_act_start, inv_investments.ASSGN_POOL as assgn_pool, CREATED.FULL_NAME as created_by, (SELECT count(id) FROM cmn_lookups_v WHERE parent_lookup_code = INV_INVESTMENTS.process_code AND is_active = 1 AND language_code = 'en') as stage_count, (CASE WHEN (nvl2((odf_ca_inv.obj_align_factor1*1),1,0)+nvl2((odf_ca_inv.obj_align_factor2*1),1,0)+nvl2((odf_ca_inv.obj_align_factor3*1),1,0)+nvl2((odf_ca_inv.obj_align_factor4*1),1,0)+nvl2((odf_ca_inv.obj_align_factor5*1),1,0)+nvl2((odf_ca_inv.obj_align_factor6*1),1,0))=0 THEN NULL ELSE (nvl((odf_ca_inv.obj_align_factor1*1),0)+nvl((odf_ca_inv.obj_align_factor2*1),0)+nvl((odf_ca_inv.obj_align_factor3*1),0)+nvl((odf_ca_inv.obj_align_factor4*1),0)+nvl((odf_ca_inv.obj_align_factor5*1),0)+nvl((odf_ca_inv.obj_align_factor6*1),0))/(nvl2((odf_ca_inv.obj_align_factor1*1),1,0)+nvl2((odf_ca_inv.obj_align_factor2*1),1,0)+nvl2((odf_ca_inv.obj_align_factor3*1),1,0)+nvl2((odf_ca_inv.obj_align_factor4*1),1,0)+nvl2((odf_ca_inv.obj_align_factor5*1),1,0)+nvl2((odf_ca_inv.obj_align_factor6*1),1,0)) END ) as obj_alignment, inv_investments.ALIGNMENT as alignment, odf_ca_project.agl_new_ac_inv_dt as agl_new_ac_inv_dt, NVL((SELECT count(ID) FROM cmn_lookups_v WHERE parent_lookup_code = INV_INVESTMENTS.process_code AND language_code = 'en' AND IS_ACTIVE = 1 AND SORT_ORDER &lt;= (select sort_order from cmn_lookups_v WHERE lookup_code = INV_INVESTMENTS.stage_code AND lookup_type='INV_STAGE_TYPE' AND language_code = 'en')),0) as stage_number, odf_ca_project.clr_pr_solution as clr_pr_solution, ((CASE WHEN (EVREC.BAC*1.00)=0 THEN NULL ELSE (((EVREC.ETC*1.00)+(EVREC.ITD_ACWP*1.00))-(EVREC.BAC*1.00))/(EVREC.BAC*1.00) END )*(100.0*1.00)) as obj_cost_pct_var, (SELECT COUNT(1) FROM DUAL WHERE EXISTS (SELECT PRID FROM PRTEAM WHERE PRTEAM.PRPROJECTID = INV_INVESTMENTS.ID)) as has_staff, inv_projects.prDepartment as prdepartment, fin_financials.BUDGET_REV_START as budget_rev_start, odf_ca_project.obj_methodology as obj_methodology, EVREC.ITD_ACWP as ev_acwp, odf_ca_inv.vsm_lean_bc as vsm_lean_bc, PAC_MNT_PROJECTS.LOCATIONID as location_code, PAC_MNT_PROJECTS.TRANSCOSTSOURCEEQUIPMENT as trans_cost_eqp_src, odf_ca_project.agl_act_finish as agl_act_finish, inv_investments.RSF_OBS_UNIT as rsf_obs_unit, inv_investments.RCF_TECHNICAL as inv_rcf_technical, odf_ca_inv.obj_int_mappings as obj_int_mappings, fin_financials.BUDGET_BENEFIT as budget_benefit, ((CASE WHEN (EVREC.ITD_BCWS*1.00)=0 THEN NULL ELSE ((EVREC.ITD_BCWP*1.00)-(EVREC.ITD_BCWS*1.00))/(EVREC.ITD_BCWS*1.00) END )*(100.0*1.00)) as obj_ev_sv_pct, fin_financials.FORECAST_REV_TOTAL as forecast_rev_total, inv_projects.percent_complete as percent_complete, inv_investments.ODF_BLUEPRINT_ID as odf_blueprint_id, odf_ca_project.for_3c_test_string as for_3c_test_string, PAC_MNT_PROJECTS.STATUS as npio_status, (SELECT INV.ODF_OBJECT_CODE
          FROM INV_INVESTMENTS INV, ODF_OBJECTS O
          WHERE INV.ID = INV_INVESTMENTS.PARENT_ID
          AND INV.ODF_OBJECT_CODE = O.CODE) as parent_type_code, inv_investments.ODF_TEMPLATE as odf_template, (SELECT
            CASE WHEN NVL(F.BUDGET_CST_TOTAL,0) > 0
              THEN NVL(F.BUDGET_CST_OPERATING_TOTAL,0) / F.BUDGET_CST_TOTAL
              ELSE NULL END
        FROM FIN_FINANCIALS F 
        WHERE F.ID = FIN_FINANCIALS.ID) as budget_cst_operating_pct, (CASE WHEN INV_INVESTMENTS.STATUS = 1 THEN 1 WHEN INV_INVESTMENTS.STATUS = 5 THEN 1 WHEN INV_INVESTMENTS.STATUS = 8 THEN 1 ELSE 0 END) as is_approved, odf_ca_project.partition_code as partition_code, (NVL(INV_INVESTMENTS.LABOR_BASESUM,0) / 3600 / PRJ_HPD_FACTOR_FCT()) as labor_basesum, inv_investments.APPROVEDBY_ID as approvedby_id, inv_investments.RCF_FLEXIBILITY as inv_rcf_flexibility, inv_projects.prSponsoredBy as prsponsoredby, odf_ca_inv.clr_cofund_currency as clr_cofund_currency, fin_financials.FORECAST_COST as forecast_cost, odf_ca_project.lc_unique_value as lc_unique_value, inv_projects.prFormat as prformat, odf_ca_project.agl_new_ac_inv_name as agl_new_ac_inv_name, odf_ca_project.agl_pctdon_plest as agl_pctdon_plest, inv_projects.PROCESS_SCALE_BDGT as process_scale_bdgt, fin_financials.FORECAST_REV_FINISH as forecast_rev_finish, inv_projects.RCF_INTERDEPENDENCY as rcf_interdependency, (case when inv_investments.schedule_start is not null and inv_investments.schedule_finish is not null THEN
        (NVL(INV_INVESTMENTS.LABOR_ACTSUM,0) / 3600 / PRJ_HPD_FACTOR_FCT())
    ELSE 0 end) as labor_actsum, odf_ca_inv.clr_go_live as clr_go_live, inv_projects.prBudget as prbudget, odf_ca_project.agl_est_usrsty as agl_est_usrsty, (case when inv_investments.schedule_start is not null and inv_investments.schedule_finish is not null THEN
        (NVL(INV_INVESTMENTS.LABOR_ETCSUM,0) / 3600 / PRJ_HPD_FACTOR_FCT())
    ELSE 0 end) as labor_etcsum, fin_financials.BUDGET_COST as budget_cost, PAC_MNT_PROJECTS.resource_code as resource_code, (SELECT e.ID FROM ENTITY e WHERE e.ENTITY = INV_INVESTMENTS.ENTITY_CODE) as entity_id, (select I.odf_object_code from ODF_CA_INV I where I.id = INV_INVESTMENTS.PARENT_ID) as parent_type, inv_projects.prGuidelines as prguidelines, odf_ca_inv.clr_cofund as clr_cofund, odf_ca_inv.obj_pfl_category1 as obj_pfl_category1, odf_ca_inv.obj_pfl_category2 as obj_pfl_category2, odf_ca_project.clr_pr_opp_problem as clr_pr_opp_problem, inv_investments.labor_act_curve as labor_act, inv_investments.labor_alloc_curve as labor_alloc, odf_ca_inv.obj_pfl_category3 as obj_pfl_category3, odf_ca_inv.obj_pfl_category4 as obj_pfl_category4, ( select count('x')
          from INV_INVESTMENTS bpInv, INV_PROJECTS ivp
          where INV_INVESTMENTS.ODF_OBJECT_CODE = 'project'
          and INV_INVESTMENTS.id = ivp.prid
          and ivp.is_template = 1
          and bpInv.odf_template_id = INV_INVESTMENTS.id ) as odf_invs_using_tmplt, fin_financials.PLANNED_BEN_TOTAL as planned_ben_total, inv_investments.STATUS as status, inv_projects.ev_calc_method as ev_calc_method, fin_financials.BUDGET_BREAKEVEN as budget_breakeven, odf_ca_project.clr_pr_summary as clr_pr_summary, odf_ca_project.clr_pr_cust_exp as clr_pr_cust_exp, inv_projects.prClosedTime as prclosedtime, inv_projects.prUID as pruid, inv_projects.RCF_SPONSORSHIP as rcf_sponsorship, fin_financials.PLANNED_NPV as planned_npv, PAC_MNT_PROJECTS.COMPANY_CODE as company_code, inv_projects.prStartImposed as prstartimposed, inv_investments.labor_baseline_curve as labor_base, inv_investments.IS_ACTIVE as is_active, PAC_MNT_PROJECTS.TRANSCOSTSOURCELABOR as trans_cost_lbr_src, odf_ca_project.agl_system as agl_system, fin_financials.PLANNED_CST_START as planned_cst_start, CASE WHEN NVL((SELECT PRLOCK.PRUSERID FROM PRLOCK WHERE PRLOCK.PRRECORDID = INV_INVESTMENTS.ID AND PRLOCK.PRNAME = 'prImportExport' AND PRLOCK.PRTABLENAME = 'SRM_PROJECTS'), 0) != 0
             THEN (SELECT CONCAT(CONCAT(FIRST_NAME, ' '), LAST_NAME) FROM CMN_SEC_USERS WHERE ID = (SELECT PRLOCK.PRUSERID FROM PRLOCK WHERE PRLOCK.PRRECORDID = INV_INVESTMENTS.ID AND PRLOCK.PRNAME = 'prImportExport' AND PRLOCK.PRTABLENAME = 'SRM_PROJECTS'))
             ELSE NULL END as locked_by, inv_investments.RCF_ORG_CULTURE as inv_rcf_org_culture, (NVL(EVREC.ITD_BCWP,0) - NVL(EVREC.ITD_BCWS,0)) as ev_sv, (SELECT
            CASE WHEN NVL(F.PLANNED_CST_TOTAL,0) > 0
              THEN NVL(F.PLANNED_CST_CAPITAL_TOTAL,0) / F.PLANNED_CST_TOTAL
              ELSE NULL END
        FROM FIN_FINANCIALS F 
        WHERE F.ID = FIN_FINANCIALS.ID) as planned_cst_capital_pct, inv_investments.entity_code as entity, BASEREC.FINISH_DATE as baseline_finish, ((CASE WHEN (EVREC.ITD_BCWP*1.00)=0 THEN NULL ELSE ((EVREC.ITD_BCWP*1.00)-(EVREC.ITD_ACWP*1.00))/(EVREC.ITD_BCWP*1.00) END )*(100.0*1.00)) as obj_ev_cv_pct, odf_ca_project.for_3c_test_number as for_3c_test_number, odf_ca_project.agl_wsjf_score as agl_wsjf_score, odf_ca_project.agl_id as agl_id, inv_investments.ODF_TEMPLATE_ID as odf_template_id, fin_financials.FORECAST_PAYBACK_PERIOD as forecast_payback_period, (NVL(INV_INVESTMENTS.labor_etcsum,0)/3600)/(select hours_per_day from prj_hours_per_day_v) as etc, PAC_MNT_PROJECTS.CLASS as investment_class, (EVREC.ITD_ACWP + EVREC.ETC) as ev_eac_t, BASEREC.LAST_UPDATED_DATE as baseline_time, PAC_MNT_PROJECTS.LABOR_EXCHANGE_RATE_TYPE as lbr_xchg_rate_type, inv_investments.IDEA_ID as idea_id, inv_investments.CI_PROGRESS as ci_progress, fin_financials.ACTUAL_CST_OPERATING as actual_cst_op, fin_financials.FORECAST_CST as fcst_cst, inv_investments.RCF_SUPPORTABILITY as inv_rcf_support, CREATED.ID as created_by_id, (CASE WHEN NVL(EVREC.ITD_ACWP,0) > 0
            AND NVL(EVREC.ITD_BCWP,0) > 0
            THEN EVREC.ITD_ACWP + ( ( (EVREC.BAC - EVREC.ITD_BCWP) * EVREC.ITD_ACWP ) / ( EVREC.ITD_BCWP ))
        ELSE NULL END) as ev_eac, inv_projects.prVersion as prversion, fin_financials.BUDGET_REV_TOTAL as budget_rev_total, inv_projects.REQ_APPROVAL_REQD as req_approval_reqd, inv_projects.RCF_FLEXIBILITY as rcf_flexibility, (SELECT NVL(SUM (b.totalcost), 0) FROM ppa_wip a, ppa_wip_values b
         WHERE a.transno = b.transno AND b.currency_type = 'HOME'
        AND a.status = 0
        AND a.investment_id = inv_investments.id GROUP BY a.investment_id) as aggr_actual_cost, odf_ca_project.clr_stakeholder as clr_stakeholder, inv_projects.EV_PERIOD_ID as ev_period_id, odf_ca_project.agl_acp_usrsty as agl_acp_usrsty, inv_investments.APPROVEDTIME as approvedtime, fin_financials.Initial_Investment as initial_investment, inv_investments.BASELINE_ID as baseline_id, inv_projects.prUserText1 as prusertext1, inv_projects.prUserText2 as prusertext2, fin_financials.reinvestment_rate as override_val_for_rr, inv_projects.prUserText3 as prusertext3, inv_projects.prUserText4 as prusertext4, inv_projects.prUserText5 as prusertext5, inv_projects.prUserText6 as prusertext6, (BASEREC.USAGE_SUM / 3600) / PRJ_HPD_FACTOR_FCT() as baseline_usage, inv_projects.prUserText7 as prusertext7, inv_projects.RCF_SUPPORTABILITY as rcf_supportability, odf_ca_project.agl_integration_type as agl_integration_type, fin_financials.FORECAST_IRR as forecast_irr, EVREC.LAST_UPDATED_DATE as ev_last_calc, (((EVREC.ETC*1.00)+(EVREC.ITD_ACWP*1.00))-(EVREC.BAC*1.00)) as obj_cost_amt_var, inv_investments.chargecodeid as chargecodeid, inv_projects.RCF_TECHNICAL as rcf_technical, ( select max(bpInv.created_date)
          from INV_INVESTMENTS bpInv, INV_PROJECTS ivp
          where INV_INVESTMENTS.ODF_OBJECT_CODE = 'project'
          and INV_INVESTMENTS.id = ivp.prid
          and ivp.is_template = 1
          and bpInv.odf_template_id = INV_INVESTMENTS.id ) as odf_tmplt_last_used, odf_ca_inv.obj_int_ext_object as obj_int_ext_object, inv_investments.bill_expense_type as bill_expense_type, odf_ca_project.clr_headline as clr_headline, INV_INVESTMENTS.CREATED_DATE as created_date, odf_ca_inv.obj_int_source as obj_int_source, inv_projects.prRequestedBy as prrequestedby, fin_financials.is_sys_val_for_tcc as is_sys_val_for_tcc, fin_financials.FORECAST_MIRR as forecast_mirr, EVREC.ETC as ev_etc, fin_financials.PLANNED_CST_OPERATING_TOTAL as planned_cst_operating_total, fin_financials.FORECAST_BENEFIT as forecast_benefit, (CASE WHEN NVL(EVREC.ITD_ACWP,0) > 0
             THEN NVL(EVREC.ITD_BCWP,0) / EVREC.ITD_ACWP
             ELSE NULL END) as ev_cpi, odf_ca_project.obj_objective as obj_objective, inv_projects.prCPMType as prcpmtype, fin_financials.PLANNED_BEN_START as planned_ben_start, odf_ca_project.clr_risk_description as clr_risk_description, inv_investments.STATUS_INDICATOR as status_indicator, (CASE WHEN NVL(EVREC.ITD_BCWS,0) > 0
             THEN NVL(EVREC.ITD_BCWP,0) / EVREC.ITD_BCWS
             ELSE NULL END) as ev_spi, fin_financials.PLANNED_COST_CAPITAL as plan_cost_cap, fin_financials.BUDGET_ACTUAL_BENEFIT as budget_actual_benefit, PAC_MNT_PROJECTS.BILL_TO_COMPANY_CODE as bill_to_id, fin_financials.FORECAST_CST_CAPITAL as fcst_cst_cap, inv_projects.RCF_OBJECTIVES as rcf_objectives, (CMN_DATE_TIME_DIFF_FCT('Day',inv_investments.schedule_finish,BASEREC.FINISH_DATE)) as obj_schedule_var, (SELECT bp.NAME FROM INV_INVESTMENTS bp WHERE bp.ID = INV_INVESTMENTS.ODF_TEMPLATE_ID) as odf_template_name, inv_projects.prRequestedTime as prrequestedtime, odf_ca_inv.odf_period_type as odf_period_type, fin_financials.BUDGET_CST_CAPITAL_TOTAL as budget_cst_capital_total, fin_financials.IS_CALC_PV_INFO as is_calc_pv_info, PAC_MNT_PROJECTS.TRANSRATESOURCELABOR as trans_rate_lbr_src, odf_ca_inv.odf_period_start as odf_period_start, inv_investments.MANAGER_ID as manager_id, odf_ca_project.clr_pr_testimonial as clr_pr_testimonial, odf_ca_inv.obj_int_format_id as obj_int_format_id, (NVL(INV_INVESTMENTS.labor_actsum,0)/3600)/(select hours_per_day from prj_hours_per_day_v) as actuals, odf_ca_project.zz_strategy as zz_strategy, INV_INVESTMENTS.MANAGER_ID as manager, fin_financials.PLANNED_CST_CAPITAL_TOTAL as planned_cst_capital_total, PAC_MNT_PROJECTS.TRANSRATESOURCEEQUIPMENT as trans_rate_eqp_src, inv_investments.STATUS_COMMENT as status_comment, fin_financials.PLANNED_COST as plan_cost, PAC_MNT_PROJECTS.WIPCLASS as wip_class, inv_investments.PROGRESS as progress, PAC_MNT_PROJECTS.DEPARTCODE as department_code, PAC_MNT_PROJECTS.TRANSRATESOURCEEXPENSES as trans_rate_exp_src, inv_projects.IS_TEMPLATE as is_template, odf_ca_project.agl_value_score as agl_value_score, inv_investments.schedule_finish as schedule_finish, ( select poa.unit_id from prj_obs_associations poa, prj_obs_units pou, prj_obs_types pot, entity ent where  NLS_UPPER(poa.table_name) = NLS_UPPER('SRM_PROJECTS') and poa.record_id = INV_INVESTMENTS.ID and poa.unit_id = pou.id and pou.type_id = pot.id  and pot.id = ent.org_chart_obs_type_id ) as odf_obs_fin_dept, inv_investments.RCF_FUNDING as inv_rcf_funding, fin_financials.BUDGET_IRR as budget_irr, inv_investments.SLA_COMPLIANCE as sla_compliance, inv_projects.IS_PROGRAM as is_program, inv_projects.RCF_HUMAN_INTERFACE as rcf_human_interface, inv_projects.RCF_RESOURCE_AVAIL as rcf_resource_avail, NVL(INV_INVESTMENTS.PURGE_FLAG,0) as purge_flag, odf_ca_project.cps_presales_desc as cps_presales_desc, PAC_MNT_PROJECTS.EXPENSE_EXCHANGE_RATE_TYPE as exp_xchg_rate_type, inv_projects.RCF_FUNDING as rcf_funding, odf_ca_project.agl_risk_score as agl_risk_score, inv_projects.prFinishImposed as prfinishimposed, (CASE WHEN NVL(EVREC.BAC,0) > 0
          AND NVL(EVREC.ITD_BCWP,0) > 0
          AND NVL(EVREC.ITD_ACWP,0) > 0
          THEN ( ( EVREC.BAC - EVREC.ITD_BCWP ) * EVREC.ITD_ACWP )  / ( EVREC.ITD_BCWP )
        ELSE NULL END) as ev_etc_t, inv_investments.TARGET_MANAGER_ID as target_manager_id, inv_investments.labor_hard_alloc_curve as labor_hard_alloc, inv_investments.RCF_INTERDEPENDENCY as inv_rcf_interdepend, inv_investments.plan_inv_category as plan_inv_category, (case when inv_investments.schedule_start is not null and inv_investments.schedule_finish is not null
          THEN (NVL(INV_INVESTMENTS.LABOR_VARIANCESUM,0) / 3600 / PRJ_HPD_FACTOR_FCT())
          ELSE 0
        end) as labor_variancesum, inv_projects.prFiscalStart as prfiscalstart, inv_investments.parent_id as odf_assoc_parent, fin_financials.ACTUAL_CST_CAPITAL as actual_cst_cap, inv_investments.name as name, odf_ca_project.agl_lastsync_st as agl_lastsync_st, (
        SELECT LISTAGG( value , ', ') WITHIN GROUP (ORDER BY value)  FROM
        (
          select  omvl2.value
          from
          odf_multi_valued_lookups omvl
          inner join inv_investments inv on inv.ODF_OBJECT_CODE || ':' || inv.id = omvl.value and omvl.object = 'odf_agreement'
          and omvl.attribute = 'predecessors'
          inner join odf_multi_valued_lookups omvl2 on omvl2.pk_id = omvl.pk_id and omvl2.object = 'odf_agreement' and omvl2.attribute = 'successors'
          where
          inv.id = INV_INVESTMENTS.ID
          FETCH NEXT 25 ROWS ONLY
          )
        ) as invagmntsuccessors, inv_investments.description as description, inv_investments.CI_STAGE as ci_stage, fin_financials.PLANNED_PAYBACK_PERIOD as planned_payback_period, fin_financials.BUDGET_CST_TOTAL as budget_cst_total, inv_investments.SYNC_INV_N_BDG_DATES as sync_inv_n_bdg_dates, fin_financials.FORECAST_CST_START as forecast_cst_start, (select reinvestment_rate from prsite) as system_value_for_rr, fin_financials.ACTUAL_CST as actual_cst, ((NVL(INV_INVESTMENTS.LABOR_ETCSUM,0) + NVL(INV_INVESTMENTS.LABOR_ACTSUM,0)) / 3600 / PRJ_HPD_FACTOR_FCT()) as labor_effort, inv_investments.track_mode as trackmode, (CASE WHEN (nvl2((inv_investments.RCF_FLEXIBILITY*1),1,0)+nvl2((inv_investments.RCF_FUNDING*1),1,0)+nvl2((inv_investments.RCF_HUMAN_INTERFACE*1),1,0)+nvl2((inv_investments.RCF_IMPLEMENTATION*1),1,0)+nvl2((inv_investments.RCF_INTERDEPENDENCY*1),1,0)+nvl2((inv_investments.RCF_OBJECTIVES*1),1,0)+nvl2((inv_investments.RCF_ORG_CULTURE*1),1,0)+nvl2((inv_investments.RCF_RESOURCE_AVAIL*1),1,0)+nvl2((inv_investments.RCF_SPONSORSHIP*1),1,0)+nvl2((inv_investments.RCF_SUPPORTABILITY*1),1,0)+nvl2((inv_investments.RCF_TECHNICAL*1),1,0))=0 THEN NULL ELSE (nvl((inv_investments.RCF_FLEXIBILITY*1),0)+nvl((inv_investments.RCF_FUNDING*1),0)+nvl((inv_investments.RCF_HUMAN_INTERFACE*1),0)+nvl((inv_investments.RCF_IMPLEMENTATION*1),0)+nvl((inv_investments.RCF_INTERDEPENDENCY*1),0)+nvl((inv_investments.RCF_OBJECTIVES*1),0)+nvl((inv_investments.RCF_ORG_CULTURE*1),0)+nvl((inv_investments.RCF_RESOURCE_AVAIL*1),0)+nvl((inv_investments.RCF_SPONSORSHIP*1),0)+nvl((inv_investments.RCF_SUPPORTABILITY*1),0)+nvl((inv_investments.RCF_TECHNICAL*1),0))/(nvl2((inv_investments.RCF_FLEXIBILITY*1),1,0)+nvl2((inv_investments.RCF_FUNDING*1),1,0)+nvl2((inv_investments.RCF_HUMAN_INTERFACE*1),1,0)+nvl2((inv_investments.RCF_IMPLEMENTATION*1),1,0)+nvl2((inv_investments.RCF_INTERDEPENDENCY*1),1,0)+nvl2((inv_investments.RCF_OBJECTIVES*1),1,0)+nvl2((inv_investments.RCF_ORG_CULTURE*1),1,0)+nvl2((inv_investments.RCF_RESOURCE_AVAIL*1),1,0)+nvl2((inv_investments.RCF_SPONSORSHIP*1),1,0)+nvl2((inv_investments.RCF_SUPPORTABILITY*1),1,0)+nvl2((inv_investments.RCF_TECHNICAL*1),1,0)) END ) as risk_score, fin_financials.FORECAST_CST_FINISH as forecast_cst_finish, fin_financials.IS_FCST_EQ_BDGT as is_fcst_eq_bdgt, odf_ca_project.agl_est_stypts as agl_est_stypts, odf_ca_inv.obj_int_lastsync_msg as obj_int_lastsync_msg, odf_ca_inv.odf_asr_template as odf_asr_template, (inv_projects.RCF_FLEXIBILITY * 1 + inv_projects.RCF_FUNDING * 1 + inv_projects.RCF_HUMAN_INTERFACE * 1 + inv_projects.RCF_IMPLEMENTATION * 1 + inv_projects.RCF_INTERDEPENDENCY * 1 + inv_projects.RCF_OBJECTIVES * 1 + inv_projects.RCF_ORG_CULTURE * 1 + inv_projects.RCF_RESOURCE_AVAIL * 1 + inv_projects.RCF_SPONSORSHIP * 1 + inv_projects.RCF_SUPPORTABILITY * 1 + inv_projects.RCF_TECHNICAL * 1) / (1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1) as risk, fin_financials.PLANNED_ACTUAL_BENEFIT as plan_actual_benefit, odf_ca_financials.odf_entity_code as odf_entity_code, (SELECT ix.NAME FROM INV_INVESTMENTS ix WHERE ix.ID = INV_INVESTMENTS.IDEA_ID) as idea_name, (SELECT
            CASE WHEN NVL(F.BUDGET_CST_TOTAL,0) > 0
              THEN NVL(F.BUDGET_CST_CAPITAL_TOTAL,0) / F.BUDGET_CST_TOTAL
              ELSE NULL END
        FROM FIN_FINANCIALS F 
        WHERE F.ID = FIN_FINANCIALS.ID) as budget_cst_capital_pct, NVL(EVREC.ITD_BCWP,0) - NVL(EVREC.ITD_ACWP,0) as ev_cv, odf_ca_project.agl_new_ac_inv_st as agl_new_ac_inv_st, inv_projects.prAsOf as prasof, inv_investments.IS_CUSTOM as is_custom, fin_financials.BUDGET_CST_OPERATING_TOTAL as budget_cst_operating_total, PAC_MNT_PROJECTS.TRANSCOSTSOURCEMATERIALS as trans_cost_mtl_src, odf_ca_inv.odf_asr_reports as odf_asr_reports, fin_financials.BUDGET_COST_OPERATING as budget_cost_op, (CASE WHEN NVL(EVREC.BAC,0) > 0 AND NVL(EVREC.ITD_BCWP,0) > 0
        THEN EVREC.BAC - EVREC.ITD_BCWP
        ELSE NULL END) as ev_etc_at, inv_investments.priority as priority, fin_financials.BUDGET_ROI as budget_roi, BASEREC.START_DATE as baseline_start, NVL(inv_investments.odf_blueprint_id, (select id from odf_blueprints b where b.type = NLS_UPPER(inv_investments.odf_object_code) and b.is_default = 1)) as odf_blp_active_id, odf_ca_project.obj_status_reporting as obj_status_reporting, fin_financials.PLANNED_BENEFIT as plan_benefit, (NVL((select fin_financials.planned_cst_total
        from fin_financials, odf_object_instance_mapping
        where odf_object_instance_mapping.primary_object_instance_id = inv_investments.id
        and odf_object_instance_mapping.secondary_object_instance_id = fin_financials.id
    and odf_object_instance_mapping.primary_object_instance_code = inv_investments.odf_object_code
    and odf_object_instance_mapping.secondary_object_instance_code = 'financials'  ), 0))
    -(NVL((SELECT SUM(b.totalcost) FROM ppa_wip a, ppa_wip_values
        b WHERE a.transno = b.transno AND b.currency_type = 'HOME'
        and a.status = 0
    AND a.investment_id = inv_investments.id GROUP BY
        a.investment_id),0)) as cost_variance, ((CASE WHEN ((BASEREC.USAGE_SUM / 3600) / PRJ_HPD_FACTOR_FCT()*1.00)=0 THEN NULL ELSE (((NVL(INV_INVESTMENTS.labor_eacsum,0)/3600)/(select hours_per_day from prj_hours_per_day_v)*1.00)-((BASEREC.USAGE_SUM / 3600) / PRJ_HPD_FACTOR_FCT()*1.00))/((BASEREC.USAGE_SUM / 3600) / PRJ_HPD_FACTOR_FCT()*1.00) END )*(100.0*1.00)) as obj_effort_var, odf_ca_project.clr_attachments as clr_attachments, odf_ca_project.zz_product as zz_product, inv_investments.CURRENCY_CODE as currency_code, odf_ca_project.obj_request_type as obj_request_type, inv_projects.RCF_IMPLEMENTATION as rcf_implementation, odf_ca_project.agl_state as agl_state, inv_projects.percent_calc_mode as percent_calc_mode, odf_ca_project.ebh_audit_test as ebh_audit_test, odf_ca_project.for_3c_test_date as for_3c_test_date, (CASE WHEN NVL(EVREC.BAC,0) > 0 AND NVL(EVREC.ITD_BCWP,0) > 0
        THEN EVREC.ITD_ACWP + (EVREC.BAC - EVREC.ITD_BCWP)
        ELSE NULL END) as ev_eac_at, odf_ca_project.clr_quote as clr_quote, odf_ca_inv.odf_object_code as odf_object_code, odf_ca_project.run_sync as run_sync, (select total_cost_of_capital from prsite) as system_value_for_tcc, odf_ca_project.agl_release as agl_release, fin_financials.PLANNED_MIRR as planned_mirr, fin_financials.FORECAST_NPV as forecast_npv, odf_ca_project.z_sponsoring_cur as z_sponsoring_cur, odf_ca_project.clr_pr_call_to_act as clr_pr_call_to_act, fin_financials.PLANNED_CST_FINISH as planned_cst_finish, odf_ca_project.lc_unfair_advantage as lc_unfair_advantage, PAC_MNT_PROJECTS.EQUIPMENT_EXCHANGE_RATE_TYPE as eqp_xchg_rate_type, odf_ca_project.agl_pln_start as agl_pln_start, fin_financials.BUDGET_COST_CAPITAL as budget_cost_cap, PAC_MNT_PROJECTS.COST_TYPE as cost_type, (SELECT
          CASE WHEN NVL(F.PLANNED_CST_TOTAL,0) > 0
              THEN NVL(F.PLANNED_CST_OPERATING_TOTAL,0) / F.PLANNED_CST_TOTAL
              ELSE NULL END
        FROM FIN_FINANCIALS F 
        WHERE F.ID = FIN_FINANCIALS.ID) as planned_cst_operating_pct, inv_investments.labor_eac_curve as labor_eac, fin_financials.BUDGET_PAYBACK_PERIOD as budget_payback_period, inv_investments.cbk_type as cbk_type, PAC_MNT_PROJECTS.billing_project_id as billing_project_id, odf_ca_project.agl_sync_stories as agl_sync_stories, inv_investments.RCF_OBJECTIVES as inv_rcf_objectives, odf_ca_project.agl_ext_id as agl_ext_id, odf_ca_inv.obj_work_status as obj_work_status, fin_financials.PLANNED_IRR as planned_irr, inv_investments.is_open_for_te as isopen, inv_investments.RCF_RESOURCE_AVAIL as inv_rcf_res_avail, odf_ca_inv.odf_period_end as odf_period_end, inv_investments.TRACK_ASSGN_ONLY as track_assgn_only, odf_ca_project.agl_acp_stypts as agl_acp_stypts, fin_financials.is_sys_val_for_rr as is_sys_val_for_rr, CASE WHEN NVL(INV_INVESTMENTS.labor_eacsum,0) > 0
             THEN NVL(INV_INVESTMENTS.labor_actsum,0)/NVL(INV_INVESTMENTS.labor_eacsum,0)
             ELSE 0 END as pct_complete, 'project' as odf_obj_type, inv_projects.TYPE as inv_fin_type, inv_investments.IS_REQUIRED as is_required, PAC_MNT_PROJECTS.EX_BILL_EXPENSES as bill_expenses, INV_INVESTMENTS.LAST_UPDATED_DATE as last_updated_date, INV_INVESTMENTS.odf_object_code as inv_type, fin_financials.BUDGET_CST_START as budget_cst_start, odf_ca_project.obj_stakeholder1 as obj_stakeholder1, odf_ca_project.obj_stakeholder2 as obj_stakeholder2, odf_ca_project.obj_stakeholder3 as obj_stakeholder3, inv_projects.prPctComplete as prpctcomplete, fin_financials.PLANNED_BREAKEVEN as planned_breakeven, (((NVL(INV_INVESTMENTS.labor_eacsum,0)/3600)/(select hours_per_day from prj_hours_per_day_v)*1.00)-((BASEREC.USAGE_SUM / 3600) / PRJ_HPD_FACTOR_FCT()*1.00)) as obj_effort_amt_var, inv_projects.PROCESS_SCALE_WORK as process_scale_work, fin_financials.FORECAST_REV_START as forecast_rev_start  from inv_investments inv_investments JOIN odf_ca_projfinproperties odf_ca_projfinproperties ON odf_ca_projfinproperties.id=inv_investments.id JOIN pac_mnt_projects PAC_MNT_PROJECTS ON PAC_MNT_PROJECTS.id=inv_investments.id JOIN inv_projects inv_projects ON inv_projects.prid=inv_investments.id LEFT OUTER JOIN prj_baseline_details BASEREC ON BASEREC.BASELINE_ID = INV_INVESTMENTS.BASELINE_ID AND BASEREC.OBJECT_TYPE='PROJECT' LEFT OUTER JOIN prj_ev_history EVREC ON EVREC.OBJECT_ID = INV_INVESTMENTS.ID AND EVREC.OBJECT_TYPE='PROJECT' AND EVREC.PERIOD_NUMBER=0 JOIN srm_resources CREATED ON CREATED.user_id=inv_investments.created_by JOIN srm_resources UPDATED ON UPDATED.user_id=inv_investments.last_updated_by JOIN odf_ca_inv odf_ca_inv ON odf_ca_inv.id=inv_investments.id join odf_object_instance_mapping oim1 on inv_investments.id = oim1.primary_object_instance_id  and oim1.primary_object_instance_code='project' join fin_financials fin_financials on oim1.secondary_object_instance_id = fin_financials.id and oim1.secondary_object_instance_code='financials' JOIN odf_ca_financials odf_ca_financials ON odf_ca_financials.id=FIN_FINANCIALS.id JOIN odf_ca_project odf_ca_project ON odf_ca_project.id=inv_investments.id  where 1 = 1 and odf_ca_inv.odf_object_code = 'project'</text>
  </QueryResult>
</ClarityDBViewQuery>
